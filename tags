!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AR	Makefile	/^export AR:=$(CROSS)ar$/;"	m
ARRAY_SIZE	src/http_parser.c	41;"	d	file:
ATT_NAME_LENGTH	inc/webmail_attach.h	15;"	d
Accept_Encoding	inc/http_parser.h	/^	char Accept_Encoding[100];$/;"	m	struct:dlp_http_post_head
Accept_Language	inc/http_parser.h	/^	char Accept_Language[100];$/;"	m	struct:dlp_http_post_head
BAIDU_PAN_BLOCK	src/http_netdisk.c	12;"	d	file:
BIT_AT	src/http_parser.c	45;"	d	file:
CALLBACK_DATA	src/http_parser.c	118;"	d	file:
CALLBACK_DATA_	src/http_parser.c	98;"	d	file:
CALLBACK_DATA_NOADVANCE	src/http_parser.c	122;"	d	file:
CALLBACK_NOTIFY	src/http_parser.c	92;"	d	file:
CALLBACK_NOTIFY_	src/http_parser.c	81;"	d	file:
CALLBACK_NOTIFY_NOADVANCE	src/http_parser.c	95;"	d	file:
CC	Makefile	/^export CC:=$(CROSS)gcc$/;"	m
CFLAGS	Makefile	/^	CFLAGS       := ${DEBUG_CFLAGS}$/;"	m
CFLAGS	Makefile	/^	CFLAGS       := ${RELEASE_CFLAGS}$/;"	m
CFLAGS	Makefile	/^CFLAGS   := ${CFLAGS}   ${DEFS}$/;"	m
CHARSET_MAX	src/ftp_extract.c	65;"	d	file:
CHUNKED	src/http_parser.c	139;"	d	file:
CLOSE	src/http_parser.c	141;"	d	file:
CNMAIL	inc/webmail_parser.h	99;"	d
CNPCMAIL	inc/webmail_parser.h	114;"	d
CNTVMAIL	inc/webmail_parser.h	119;"	d
CONNECTION	src/http_parser.c	135;"	d	file:
CONTENT_LENGTH	src/http_parser.c	136;"	d	file:
CR	src/http_parser.c	374;"	d	file:
CROSS	Makefile	/^export CROSS:=$/;"	m
CXXFLAGS	Makefile	/^	CXXFLAGS     := ${DEBUG_CXXFLAGS}$/;"	m
CXXFLAGS	Makefile	/^	CXXFLAGS     := ${RELEASE_CXXFLAGS}$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS := ${CXXFLAGS} ${DEFS}$/;"	m
Char2Num	src/parsertrace.c	/^char Char2Num(char ch)$/;"	f
Content	inc/webmail_parser.h	/^	char *Content;\/*ÈÇÆ‰ª∂Ê≠£Êñá*\/$/;"	m	struct:mail
DATA_BDAT_END	inc/smtpfunc.h	/^  DATA_BDAT_END              \/* Êï∞ÊçÆ‰º†ËæìÁªìÊùü *\/$/;"	e	enum:zcsmtp_data_store_flag
DATA_BDAT_START	inc/smtpfunc.h	/^  DATA_BDAT_START,           \/* ÂºÄÂßãÊï∞ÊçÆ‰º†Ëæì *\/$/;"	e	enum:zcsmtp_data_store_flag
DATA_BDAT_WAIT	inc/smtpfunc.h	/^  DATA_BDAT_WAIT,            \/* Ê≤°ÊúâËøõË°åÊï∞ÊçÆ‰º†Ëæì *\/$/;"	e	enum:zcsmtp_data_store_flag
DEBUG	Makefile	/^DEBUG          := YES $/;"	m
DEBUG_CFLAGS	Makefile	/^DEBUG_CFLAGS     :=  -O3 -fPIC$/;"	m
DEBUG_CXXFLAGS	Makefile	/^DEBUG_CXXFLAGS   := ${DEBUG_CFLAGS} $/;"	m
DLP_HTTP_PARSER_STRING_AND_STRLEN	inc/http_parser.h	/^typedef struct DLP_HTTP_PARSER_STRING_AND_STRLEN {$/;"	s
DLP_WEBMAIL_PARSER_STRING_AND_STRLEN	inc/webmail_parser.h	/^typedef struct DLP_WEBMAIL_PARSER_STRING_AND_STRLEN {$/;"	s
ELEM_AT	src/http_parser.c	51;"	d	file:
EML_TO	inc/beap_hash.h	/^typedef struct EML_TO$/;"	s
EML_TO	inc/beap_hash.h	/^}EML_TO;$/;"	t	typeref:struct:EML_TO
ETH_ALEN	src/pfutils.c	45;"	d	file:
EXTRACTMAIN_H__	inc/extractmain.h	42;"	d
EXT_HDR_DST	Makefile	/^EXT_HDR_DST		:= .\/inc\/$/;"	m
EXT_HEADER_FILE	Makefile	/^EXT_HEADER_FILE :=$/;"	m
EXT_LIB_DST	Makefile	/^EXT_LIB_DST		:= .\/lib$/;"	m
FALSE	inc/gmime_smtp.h	71;"	d
FALSE	inc/http_IM_parser.h	72;"	d
FALSE	inc/smtpfunc.h	70;"	d
FILEPARSE_H_	inc/fileparse.h	28;"	d
FILE_KEY	inc/extractmain.h	63;"	d
FILE_NAME_LENGTH	inc/webmail_parser.h	40;"	d
FILE_NODE_MAX	inc/http_parser.h	334;"	d
FREE	src/http_IM_parser.c	74;"	d	file:
FREE	src/http_fei_xin.c	24;"	d	file:
FREE	src/http_netdisk.c	15;"	d	file:
FTP_EXTRACT_H_	inc/ftp_extract.h	30;"	d
F_CHUNKED	inc/http_parser.h	/^  { F_CHUNKED               = 1 << 0$/;"	e	enum:flags
F_CONNECTION_CLOSE	inc/http_parser.h	/^  , F_CONNECTION_CLOSE      = 1 << 2$/;"	e	enum:flags
F_CONNECTION_KEEP_ALIVE	inc/http_parser.h	/^  , F_CONNECTION_KEEP_ALIVE = 1 << 1$/;"	e	enum:flags
F_SKIPBODY	inc/http_parser.h	/^  , F_SKIPBODY              = 1 << 5$/;"	e	enum:flags
F_TRAILING	inc/http_parser.h	/^  , F_TRAILING              = 1 << 3$/;"	e	enum:flags
F_UPGRADE	inc/http_parser.h	/^  , F_UPGRADE               = 1 << 4$/;"	e	enum:flags
From	inc/webmail_parser.h	/^	char *From; \/*Âèë‰ª∂‰∫∫*\/$/;"	m	struct:mail
GBK2UTF8	src/ftp_extract.c	/^GBK2UTF8 (char *pInBuf, int iInLen, char *pOutBuf, int iOutLen, char *charset)$/;"	f
GMIME_SMTP_H_	inc/gmime_smtp.h	38;"	d
GSF_MAKE_DBG	Makefile	/^	export GSF_MAKE_DBG:=GSF_DEBUG$/;"	m
GSF_MAKE_DBG	Makefile	/^	export GSF_MAKE_DBG:=GSF_RELEASE$/;"	m
GSF_SUPPORT_GDB	Makefile	/^	export GSF_SUPPORT_GDB:=YES$/;"	m
HEAD_FIELD_ACCEPT	inc/http_parser.h	/^	HEAD_FIELD_ACCEPT,$/;"	e	enum:__anon7
HEAD_FIELD_ACCEPT_ENCODING	inc/http_parser.h	/^	HEAD_FIELD_ACCEPT_ENCODING,$/;"	e	enum:__anon7
HEAD_FIELD_ACCEPT_LANGUAGE	inc/http_parser.h	/^	HEAD_FIELD_ACCEPT_LANGUAGE,$/;"	e	enum:__anon7
HEAD_FIELD_CONNECTTION	inc/http_parser.h	/^	HEAD_FIELD_CONNECTTION,$/;"	e	enum:__anon7
HEAD_FIELD_CONTENTSIZE	inc/http_parser.h	/^	HEAD_FIELD_CONTENTSIZE,$/;"	e	enum:__anon7
HEAD_FIELD_CONTENT_LENGTH	inc/http_parser.h	/^	HEAD_FIELD_CONTENT_LENGTH,$/;"	e	enum:__anon7
HEAD_FIELD_CONTENT_TYPE	inc/http_parser.h	/^	HEAD_FIELD_CONTENT_TYPE,$/;"	e	enum:__anon7
HEAD_FIELD_COOKIE	inc/http_parser.h	/^	HEAD_FIELD_COOKIE,$/;"	e	enum:__anon7
HEAD_FIELD_HOST	inc/http_parser.h	/^	HEAD_FIELD_HOST,$/;"	e	enum:__anon7
HEAD_FIELD_INDEX_MAX	inc/http_parser.h	/^	HEAD_FIELD_INDEX_MAX$/;"	e	enum:__anon7
HEAD_FIELD_MAX	inc/http_parser.h	335;"	d
HEAD_FIELD_ORIGIN	inc/http_parser.h	/^	HEAD_FIELD_ORIGIN,$/;"	e	enum:__anon7
HEAD_FIELD_RANGE	inc/http_parser.h	/^	HEAD_FIELD_RANGE,\/\/–ÌΩ®∂´–¬‘ˆ$/;"	e	enum:__anon7
HEAD_FIELD_REFERER	inc/http_parser.h	/^	HEAD_FIELD_REFERER,$/;"	e	enum:__anon7
HEAD_FIELD_UPLOAD_NAME	inc/http_parser.h	/^	HEAD_FIELD_UPLOAD_NAME,$/;"	e	enum:__anon7
HEAD_FIELD_UPLOAD_OFFSET	inc/http_parser.h	/^	HEAD_FIELD_UPLOAD_OFFSET,$/;"	e	enum:__anon7
HEAD_FIELD_UPLOAD_SIZE	inc/http_parser.h	/^	HEAD_FIELD_UPLOAD_SIZE,$/;"	e	enum:__anon7
HEAD_FIELD_UPLOAD_TASK_ID	inc/http_parser.h	/^	HEAD_FIELD_UPLOAD_TASK_ID,\/\/–ÌΩ®∂´–¬‘ˆ$/;"	e	enum:__anon7
HEAD_FIELD_USER_AGENT	inc/http_parser.h	/^	HEAD_FIELD_USER_AGENT,$/;"	e	enum:__anon7
HEAD_FIELD_X_QQMAIL_FILENAME	inc/http_parser.h	/^	HEAD_FIELD_X_QQMAIL_FILENAME,$/;"	e	enum:__anon7
HTTP_BOTH	inc/http_parser.h	/^enum http_parser_type { HTTP_REQUEST, HTTP_RESPONSE, HTTP_BOTH };$/;"	e	enum:http_parser_type
HTTP_ERRNO_GEN	inc/http_parser.h	198;"	d
HTTP_ERRNO_GEN	inc/http_parser.h	202;"	d
HTTP_ERRNO_MAP	inc/http_parser.h	/^  HTTP_ERRNO_MAP(HTTP_ERRNO_GEN)$/;"	e	enum:http_errno
HTTP_ERRNO_MAP	inc/http_parser.h	155;"	d
HTTP_FILE_CONTENT_TYPE_MAX	inc/http_parser.h	340;"	d
HTTP_FILE_HOST_MAX	inc/http_parser.h	339;"	d
HTTP_FILE_ORIGIN_MAX	inc/http_parser.h	337;"	d
HTTP_FILE_RANGE	inc/http_parser.h	344;"	d
HTTP_FILE_REFERER_MAX	inc/http_parser.h	338;"	d
HTTP_FILE_UP_LOAD_NAME_MAX	inc/http_parser.h	341;"	d
HTTP_FILE_UP_LOAD_TASK_ID	inc/http_parser.h	345;"	d
HTTP_FILE_UP_LOAD_TIME_MAX	inc/http_parser.h	342;"	d
HTTP_FILE_URL_MAX	inc/http_parser.h	336;"	d
HTTP_IM_PARSER_H_	inc/http_IM_parser.h	2;"	d
HTTP_MAX_HEADER_SIZE	inc/http_parser.h	71;"	d
HTTP_METHOD_MAP	inc/http_parser.h	/^  HTTP_METHOD_MAP(XX)$/;"	e	enum:http_method
HTTP_METHOD_MAP	inc/http_parser.h	96;"	d
HTTP_PARSER_ERRNO	inc/http_parser.h	206;"	d
HTTP_PARSER_STRICT	inc/http_parser.h	60;"	d
HTTP_PARSER_VERSION_MAJOR	inc/http_parser.h	34;"	d
HTTP_PARSER_VERSION_MINOR	inc/http_parser.h	35;"	d
HTTP_PARSER_VERSION_PATCH	inc/http_parser.h	36;"	d
HTTP_REQUEST	inc/http_parser.h	/^enum http_parser_type { HTTP_REQUEST, HTTP_RESPONSE, HTTP_BOTH };$/;"	e	enum:http_parser_type
HTTP_RESPONSE	inc/http_parser.h	/^enum http_parser_type { HTTP_REQUEST, HTTP_RESPONSE, HTTP_BOTH };$/;"	e	enum:http_parser_type
HTTP_STRERROR_GEN	src/http_parser.c	420;"	d	file:
HTTP_STRERROR_GEN	src/http_parser.c	427;"	d	file:
HttpSession	inc/beap_hash.h	/^HttpSession;$/;"	t	typeref:struct:https
IALLOCATOR	inc/imembase.h	/^struct IALLOCATOR$/;"	s
ICONTAINEROF	inc/imembase.h	79;"	d
IMCACHE_ARRAY	inc/imembase.h	/^struct IMCACHE_ARRAY$/;"	s
IMCACHE_ARRAYLIMIT	inc/imembase.h	380;"	d
IMCACHE_CHECK_MAGIC	src/imembase.c	1097;"	d	file:
IMCACHE_CHECK_MAGIC	src/imembase.c	1454;"	d	file:
IMCACHE_FLAG_NODRAIN	src/imembase.c	978;"	d	file:
IMCACHE_FLAG_NOLOCK	src/imembase.c	979;"	d	file:
IMCACHE_FLAG_OFFSLAB	src/imembase.c	977;"	d	file:
IMCACHE_FLAG_ONQUEUE	src/imembase.c	981;"	d	file:
IMCACHE_FLAG_SYSTEM	src/imembase.c	980;"	d	file:
IMCACHE_LIST3	inc/imembase.h	/^struct IMCACHE_LIST3$/;"	s
IMCACHE_NAMESIZE	inc/imembase.h	390;"	d
IMCACHE_NODECOUNT	inc/imembase.h	387;"	d
IMCACHE_NODECOUNT_SHIFT	inc/imembase.h	384;"	d
IMCACHE_NODRAIN	src/imembase.c	984;"	d	file:
IMCACHE_NOLOCK	src/imembase.c	985;"	d	file:
IMCACHE_OFFSLAB	src/imembase.c	983;"	d	file:
IMCACHE_ONQUEUE	src/imembase.c	987;"	d	file:
IMCACHE_SYSTEM	src/imembase.c	986;"	d	file:
IMEMCACHE	inc/imembase.h	/^struct IMEMCACHE$/;"	s
IMEMGFP	inc/imembase.h	/^struct IMEMGFP$/;"	s
IMEMNODE	inc/imembase.h	/^struct IMEMNODE$/;"	s
IMEMSLAB	inc/imembase.h	/^struct IMEMSLAB$/;"	s
IMEMSLAB_ISEMPTY	inc/imembase.h	154;"	d
IMEMSLAB_ISFULL	inc/imembase.h	153;"	d
IMEMSLAB_NEXT	src/imembase.c	36;"	d	file:
IMLOG_CACHE	inc/imembase.h	300;"	d
IMLOG_GFP	inc/imembase.h	295;"	d
IMLOG_KMEM	inc/imembase.h	301;"	d
IMLOG_LIST3	inc/imembase.h	298;"	d
IMLOG_LISTDBG	inc/imembase.h	299;"	d
IMLOG_PAGE	inc/imembase.h	293;"	d
IMLOG_PAGEDBG	inc/imembase.h	294;"	d
IMLOG_SLAB	inc/imembase.h	296;"	d
IMLOG_SLABDBG	inc/imembase.h	297;"	d
IMNODE_DATA	inc/imembase.h	242;"	d
IMNODE_MODE	inc/imembase.h	243;"	d
IMNODE_NEXT	inc/imembase.h	241;"	d
IMNODE_NODE	inc/imembase.h	239;"	d
IMNODE_PREV	inc/imembase.h	240;"	d
IMPAGE_DEFAULT	inc/imembase.h	307;"	d
IMPAGE_MAP	inc/imembase.h	313;"	d
IMPAGE_TOPAGE	inc/imembase.h	312;"	d
IMROUNDSHIFT	inc/imembase.h	156;"	d
IMROUNDSIZE	inc/imembase.h	157;"	d
IMROUNDUP	inc/imembase.h	158;"	d
IMUTEXHOOK	inc/imembase.h	/^struct IMUTEXHOOK$/;"	s
IMUTEX_DESTROY	src/imembase.c	560;"	d	file:
IMUTEX_DESTROY	src/imembase.c	569;"	d	file:
IMUTEX_INIT	src/imembase.c	559;"	d	file:
IMUTEX_INIT	src/imembase.c	568;"	d	file:
IMUTEX_LOCK	src/imembase.c	561;"	d	file:
IMUTEX_LOCK	src/imembase.c	570;"	d	file:
IMUTEX_MAXCPU	inc/imembase.h	276;"	d
IMUTEX_MAXCPU_SHIFT	inc/imembase.h	273;"	d
IMUTEX_TYPE	src/imembase.c	558;"	d	file:
IMUTEX_TYPE	src/imembase.c	567;"	d	file:
IMUTEX_UNLOCK	src/imembase.c	562;"	d	file:
IMUTEX_UNLOCK	src/imembase.c	571;"	d	file:
IM_FILE_NAME_LENGTH	inc/http_IM_parser.h	75;"	d
IM_Match_Pcre	src/http_IM_parser.c	/^char ** IM_Match_Pcre(unsigned char *src, const char *pattern, unsigned int n)$/;"	f
IM_dad	inc/beap_hash.h	/^	unsigned int   IM_dad;	\/\/ƒø??IP$/;"	m	struct:http_IM_tuple5
IM_dst	inc/beap_hash.h	/^	unsigned short IM_dst;	\/\/ƒø?ƒ∂Àø?$/;"	m	struct:http_IM_tuple5
IM_file_inf	inc/http_IM_parser.h	/^struct IM_file_inf$/;"	s
IM_get_file_size	src/http_IM_parser.c	/^unsigned long IM_get_file_size(const char *path)  $/;"	f
IM_memcmp_match_NodeList	src/read_IM_config.c	/^_IM_HOST_URL_REG 		*IM_memcmp_match_NodeList;$/;"	v
IM_memcmp_match_head_Node	src/read_IM_config.c	/^_IM_HOST_URL_REG 		*IM_memcmp_match_head_Node;$/;"	v
IM_memcpy	src/read_IM_config.c	/^int IM_memcpy(char **p1, const char *p2)$/;"	f
IM_pcre_match_NodeList	src/read_IM_config.c	/^_IM_HOST_URL_REG		*IM_pcre_match_NodeList;$/;"	v
IM_pcre_match_head_Node	src/read_IM_config.c	/^_IM_HOST_URL_REG		*IM_pcre_match_head_Node;$/;"	v
IM_sad	inc/beap_hash.h	/^	unsigned int   IM_sad;	\/\/‘¥IP$/;"	m	struct:http_IM_tuple5
IM_src	inc/beap_hash.h	/^	unsigned short IM_src;	\/\/‘¥?Àø?$/;"	m	struct:http_IM_tuple5
IMemSlab	inc/imembase.h	/^typedef struct IMEMSLAB IMemSlab;$/;"	t	typeref:struct:IMEMSLAB
INCDIRS	Makefile	/^INCDIRS=$(shell find .\/inc -maxdepth 2 -type d)$/;"	m
INCPRJ	Makefile	/^INCPRJ=$(foreach dir,$(INCDIRS),$(join -I,$(dir)))$/;"	m
INCS	Makefile	/^INCS := ${INCPRJ}$/;"	m
INLINE	inc/imembase.h	55;"	d
IOFFSETOF	inc/imembase.h	77;"	d
IQUEUEHEAD	inc/imembase.h	/^struct IQUEUEHEAD {$/;"	s
IQUEUE_ADD	inc/imembase.h	88;"	d
IQUEUE_ADD_TAIL	inc/imembase.h	92;"	d
IQUEUE_DEL	inc/imembase.h	98;"	d
IQUEUE_DEL_BETWEEN	inc/imembase.h	96;"	d
IQUEUE_DEL_INIT	inc/imembase.h	103;"	d
IQUEUE_ENTRY	inc/imembase.h	82;"	d
IQUEUE_FOREACH	inc/imembase.h	116;"	d
IQUEUE_HEAD	inc/imembase.h	71;"	d
IQUEUE_HEAD_INIT	inc/imembase.h	70;"	d
IQUEUE_INIT	inc/imembase.h	74;"	d
IQUEUE_IS_EMPTY	inc/imembase.h	106;"	d
IS_ALPHA	src/http_parser.c	377;"	d	file:
IS_ALPHANUM	src/http_parser.c	379;"	d	file:
IS_FX	src/http_IM_parser.c	/^const char		*IS_FX = "CloudFile";\/\/È£û‰ø°Á¶ªÁ∫øÊñá‰ª∂‰º†ËæìÔºå User Agent$/;"	v
IS_HEX	src/http_parser.c	380;"	d	file:
IS_HOST_CHAR	src/http_parser.c	391;"	d	file:
IS_HOST_CHAR	src/http_parser.c	396;"	d	file:
IS_MARK	src/http_parser.c	381;"	d	file:
IS_NUM	src/http_parser.c	378;"	d	file:
IS_QQ	src/http_IM_parser.c	/^const char		*IS_QQ = "QQClient";\/\/QQÁ¶ªÁ∫øÊñá‰ª∂‰º†ËæìÔºåUser Agent$/;"	v
IS_QQ_1	src/http_IM_parser.c	/^const char		*IS_QQ_1 = "Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1)";\/\/QQ5.4ÁâàÊú¨User Agent$/;"	v
IS_QQ_2014_GOS	src/http_IM_parser.c	/^const char		*IS_QQ_2014_GOS = "TXFTNActiveX_RawSocket";\/\/QQ2014 Áæ§ÂÖ±‰∫´Êñá‰ª∂Êñá‰ª∂‰º†ËæìÔºåUser Agent$/;"	v
IS_URL_CHAR	src/http_parser.c	390;"	d	file:
IS_URL_CHAR	src/http_parser.c	394;"	d	file:
IS_USERINFO_CHAR	src/http_parser.c	384;"	d	file:
IS_WY_host	src/http_IM_parser.c	/^const char		*IS_WY_host = "tj.yunup.ftn.qq.com";\/\/QQÂæÆ‰∫ëÁΩëÁõò$/;"	v
IS_YM_url	src/http_IM_parser.c	/^const char		*IS_YM_url = "^\/relay\\\\?token=.+&sender=.+&recver=.+";\/\/Ê≠£ÂàôË°®ËææÂºè$/;"	v
IVECTOR	inc/imembase.h	/^struct IVECTOR$/;"	s
KEEP_ALIVE	src/http_parser.c	140;"	d	file:
LDFLAGS	Makefile	/^	LDFLAGS      := ${LDFLAGS}$/;"	m
LDFLAGS	Makefile	/^LDFLAGS          := $/;"	m
LF	src/http_parser.c	375;"	d	file:
LOG4C_CATEGORY_DBG	inc/plog.h	9;"	d
LOG4C_CATEGORY_ERR	inc/plog.h	7;"	d
LOG4C_CATEGORY_FTL	inc/plog.h	6;"	d
LOG4C_CATEGORY_INF	inc/plog.h	10;"	d
LOG4C_CATEGORY_NTC	inc/plog.h	11;"	d
LOG4C_CATEGORY_WRN	inc/plog.h	8;"	d
LOWER	src/http_parser.c	376;"	d	file:
LS_MEM_FREE	inc/beap_hash.h	50;"	d
LS_MEM_MALLOC	inc/beap_hash.h	49;"	d
MAIL139	inc/webmail_parser.h	104;"	d
MAIL189	inc/webmail_parser.h	109;"	d
MAIL_NAME_MAX	inc/smtpfunc.h	74;"	d
MAIL_RCPT_TO_MAX	inc/smtpfunc.h	75;"	d
MARK	src/http_parser.c	126;"	d	file:
MAX_BOUNDARY_LEN	inc/webmail_parser.h	59;"	d
MAX_HASH_SIZE	inc/beap_hash.h	7;"	d
MAX_METHOD_SIZE	src/srv_echo.c	30;"	d	file:
MAX_PT_LEN	inc/webmail_parser.h	45;"	d
MAX_REGEX_RESULT_LEN	inc/webmail_parser.h	28;"	d
MAX_RING_BUFFER_COUNT	inc/ring_buffer.h	8;"	d
MAX_SRING_BUFFER_COUNT	inc/ring_buffer.h	9;"	d
MAX_TIME_LEN	inc/webmail_parser.h	54;"	d
MAX_TO_LEN	inc/webmail_parser.h	49;"	d
MAX_URL_SIZE	src/srv_echo.c	29;"	d	file:
MIN	src/http_parser.c	37;"	d	file:
MSEC_IN_DAY	src/pfutils.c	194;"	d	file:
MSEC_IN_HOUR	src/pfutils.c	195;"	d	file:
MSEC_IN_MINUTE	src/pfutils.c	196;"	d	file:
MSEC_IN_SEC	src/pfutils.c	197;"	d	file:
NAMELEN	inc/update_json.h	68;"	d
NAME_LEN_MAX	inc/smtpfunc.h	73;"	d
NEW_MESSAGE	src/http_parser.c	412;"	d	file:
NEW_MESSAGE	src/http_parser.c	415;"	d	file:
NIDS_PRO_KEY	inc/extractmain.h	61;"	d
NON_NUM	inc/webmail_parser.h	31;"	d
NON_NUM	src/parsertrace.c	43;"	d	file:
OBJS	Makefile	/^OBJS=$(patsubst %.c, %.o, $(patsubst %.cpp, %.o, $(SRCS))) $/;"	m
OUTPUT	Makefile	/^OUTPUT := .\/lib\/srv_echo.so$/;"	m
OVECCOUNT	inc/gmime_smtp.h	63;"	d
OVECCOUNT	inc/http_IM_parser.h	62;"	d
OVECCOUNT	inc/webmail_parser.h	25;"	d
PARSERTRACE_H_	inc/parsertrace.h	28;"	d
PARSING_HEADER	src/http_parser.c	330;"	d	file:
PATH_SEPARATOR	inc/fileparse.h	32;"	d
PATH_SEPARATOR	inc/fileparse.h	34;"	d
PATTERN_LENGTH	inc/webmail_parser.h	64;"	d
PLOG_H_	inc/plog.h	2;"	d
PROTOCOL_JSONLEN	inc/extractmain.h	66;"	d
PROTOCOL_KEY	inc/extractmain.h	62;"	d
PROXY_CONNECTION	src/http_parser.c	134;"	d	file:
QMAIL	inc/webmail_parser.h	79;"	d
QQ_6_3_HEADER	src/http_IM_parser.c	53;"	d	file:
QQ_6_3_MAX_BLOCK	src/http_IM_parser.c	51;"	d	file:
QQ_6_3_MIN_BLOCK	src/http_IM_parser.c	49;"	d	file:
QQ_6_6_MAX_BLOCK	src/http_IM_parser.c	55;"	d	file:
QQ_fn	src/http_IM_parser.c	/^const char      *QQ_fn = "QQ_File_Have_No_Name";$/;"	v
QQattach	src/webmail_parser.c	/^int QQattach(HttpSession* dlp_http,webmail_string_and_len *StoPT,webmail_string_and_len *StoBY,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
QQattach2	src/webmail_parser.c	/^int QQattach2(HttpSession* dlp_http, webmail_string_and_len *StoPT, webmail_string_and_len *StoMB, dlp_webmail_info *webmail)$/;"	f
QQattachF	src/webmail_parser.c	/^int QQattachF(HttpSession* dlp_http,webmail_string_and_len *StoCK,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
QQmail	src/webmail_parser.c	/^int QQmail(webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
QQmail_qun	src/webmail_parser.c	/^int QQmail_qun(webmail_string_and_len *StoCK,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
READ_IM_CONFIG_H_	inc/read_IM_config.h	2;"	d
RELEASE_CFLAGS	Makefile	/^RELEASE_CFLAGS   := -O3 -fPIC$/;"	m
RELEASE_CXXFLAGS	Makefile	/^RELEASE_CXXFLAGS := ${RELEASE_CFLAGS}$/;"	m
RING_BUFFER_H	inc/ring_buffer.h	2;"	d
RING_BUFFER_NODE	inc/ring_buffer.h	/^} RING_BUFFER_NODE;$/;"	t	typeref:struct:ring_buffer_node_tag
RawAttName	inc/webmail_attach.h	/^	char RawAttName[ATT_NAME_LENGTH];\/* Êñá‰ª∂Âêç*\/$/;"	m	struct:att_node
SESSION_BUFFER_NODE	inc/ring_buffer.h	/^} SESSION_BUFFER_NODE;$/;"	t	typeref:struct:session_buffer_node_tag
SET_ERRNO	src/http_parser.c	60;"	d	file:
SINAMAIL	inc/webmail_parser.h	84;"	d
SMALL_BUFF	src/srv_echo.c	31;"	d	file:
SMTPFUNC_H_	inc/smtpfunc.h	49;"	d
SMTPID	inc/smtpfunc.h	/^typedef struct SMTPID$/;"	s
SMTPID_t	inc/smtpfunc.h	/^} SMTPID_t;$/;"	t	typeref:struct:SMTPID
SMTP_DISSECT_H_	inc/smtp_dissect.h	39;"	d
SMTP_EML	inc/beap_hash.h	/^typedef struct SMTP_EML$/;"	s
SMTP_EML	inc/beap_hash.h	/^}SMTP_EML;$/;"	t	typeref:struct:SMTP_EML
SMTP_STATE_READING_BDAT	inc/smtpfunc.h	/^  SMTP_STATE_READING_BDAT,     \/* BDATÊï∞ÊçÆ *\/$/;"	e	enum:zcsmtp_state
SMTP_STATE_READING_CMDS	inc/smtpfunc.h	/^  SMTP_STATE_READING_CMDS,     \/* ÂëΩ‰ª§ *\/$/;"	e	enum:zcsmtp_state
SMTP_STATE_READING_DATA	inc/smtpfunc.h	/^  SMTP_STATE_READING_DATA,     \/* DATAÊï∞ÊçÆ *\/$/;"	e	enum:zcsmtp_state
SMTP_STATE_READING_RESPONSE	inc/smtpfunc.h	/^  SMTP_STATE_READING_RESPONSE, \/* ÂìçÂ∫î *\/$/;"	e	enum:zcsmtp_state
SMTP_STATE_READING_STARTTLS	inc/smtpfunc.h	/^  SMTP_STATE_READING_STARTTLS  \/* STARTTLS *\/$/;"	e	enum:zcsmtp_state
SOHUMAIL	inc/webmail_parser.h	89;"	d
SRCS	Makefile	/^SRCS:=$(foreach dir,$(SUBDIRS),$(wildcard $(dir)\/*.cpp))\\$/;"	m
STRICT_CHECK	src/http_parser.c	405;"	d	file:
STRICT_CHECK	src/http_parser.c	414;"	d	file:
SUBDIRS	Makefile	/^SUBDIRS=$(shell find .\/src -maxdepth 1 -type d)$/;"	m
SmtpSession	inc/smtpfunc.h	/^typedef struct SmtpSession$/;"	s
SmtpSession_t	inc/smtpfunc.h	/^} SmtpSession_t;$/;"	t	typeref:struct:SmtpSession
Subject	inc/webmail_parser.h	/^	char *Subject;\/*ÈÇÆ‰ª∂‰∏ªÈ¢ò*\/$/;"	m	struct:mail
T	src/http_parser.c	207;"	d	file:
T	src/http_parser.c	209;"	d	file:
T	src/http_parser.c	247;"	d	file:
TANG_DEBUG	inc/gmime_smtp.h	75;"	d
TANG_LOG	src/extractmain.c	65;"	d	file:
TOKEN	src/http_parser.c	389;"	d	file:
TOKEN	src/http_parser.c	393;"	d	file:
TOMMAIL	inc/webmail_parser.h	94;"	d
TP	Makefile	/^export TP:=$(CROSS)strip$/;"	m
TRACE_ERROR	src/pfutils.c	39;"	d	file:
TRACE_INFO	src/pfutils.c	42;"	d	file:
TRACE_NORMAL	src/pfutils.c	41;"	d	file:
TRACE_WARNING	src/pfutils.c	40;"	d	file:
TRANSFER_ENCODING	src/http_parser.c	137;"	d	file:
TRUE	inc/gmime_smtp.h	67;"	d
TRUE	inc/http_IM_parser.h	69;"	d
TRUE	inc/smtpfunc.h	66;"	d
TUPLE_NAME_LEN	inc/webmail_parser.h	69;"	d
Time	inc/webmail_parser.h	/^	char Time[MAX_TIME_LEN]; \/*ÈÇÆ‰ª∂ÂèëÈÄÅÊó∂Èó¥*\/$/;"	m	struct:mail
To	inc/webmail_parser.h	/^	char *To;\/*Êî∂‰ª∂‰∫∫*\/$/;"	m	struct:mail
UCHARDET_H___	inc/uchardet.h	38;"	d
UF_FRAGMENT	inc/http_parser.h	/^  , UF_FRAGMENT         = 5$/;"	e	enum:http_parser_url_fields
UF_HOST	inc/http_parser.h	/^  , UF_HOST             = 1$/;"	e	enum:http_parser_url_fields
UF_MAX	inc/http_parser.h	/^  , UF_MAX              = 7$/;"	e	enum:http_parser_url_fields
UF_PATH	inc/http_parser.h	/^  , UF_PATH             = 3$/;"	e	enum:http_parser_url_fields
UF_PORT	inc/http_parser.h	/^  , UF_PORT             = 2$/;"	e	enum:http_parser_url_fields
UF_QUERY	inc/http_parser.h	/^  , UF_QUERY            = 4$/;"	e	enum:http_parser_url_fields
UF_SCHEMA	inc/http_parser.h	/^  { UF_SCHEMA           = 0$/;"	e	enum:http_parser_url_fields
UF_USERINFO	inc/http_parser.h	/^  , UF_USERINFO         = 6$/;"	e	enum:http_parser_url_fields
ULLONG_MAX	src/http_parser.c	33;"	d	file:
UPDATE_JSON_H	inc/update_json.h	52;"	d
UPGRADE	src/http_parser.c	138;"	d	file:
URLDecode	src/parsertrace.c	/^int URLDecode(const char* str, const int strSize, char* result, const int resultSize) {   $/;"	f
UUID_LENGTH	inc/http_IM_parser.h	66;"	d
UUID_LENGTH	inc/webmail_attach.h	10;"	d
UUID_LENGTH	inc/webmail_parser.h	35;"	d
UUID_MAX_LENGTH	inc/beap_hash.h	8;"	d
UploadtaskID	inc/http_parser.h	/^	char UploadtaskID[HTTP_FILE_UP_LOAD_TASK_ID];\/\/–ÌΩ®∂´–¬‘ˆ$/;"	m	struct:dlp_http_post_head
WEBMAIL_PARSER_H	inc/webmail_parser.h	2;"	d
WYMAIL	inc/webmail_parser.h	74;"	d
WebmailSession	inc/beap_hash.h	/^}WebmailSession;$/;"	t	typeref:struct:__anon3
XX	inc/http_parser.h	131;"	d
XX	inc/http_parser.h	133;"	d
XX	src/http_parser.c	146;"	d	file:
XX	src/http_parser.c	148;"	d	file:
_IM_HOST_URL_REG	inc/read_IM_config.h	/^typedef struct _IM_HOST_URL_REG{$/;"	s
_IM_HOST_URL_REG	inc/read_IM_config.h	/^}_IM_HOST_URL_REG;$/;"	t	typeref:struct:_IM_HOST_URL_REG
__BEAP_HASH	inc/beap_hash.h	2;"	d
__IMEMBASE_H__	inc/imembase.h	30;"	d
__IQUEUE_DEF__	inc/imembase.h	37;"	d
__TYPEDEF_H__	inc/type_define.h	2;"	d
__USE_GNU	src/pfutils.c	28;"	d	file:
_bodystruct	inc/gmime_smtp.h	/^struct _bodystruct {$/;"	s
_envelope	inc/gmime_smtp.h	/^struct _envelope {$/;"	s
_http_IM_session	inc/beap_hash.h	/^typedef struct _http_IM_session$/;"	s
_http_feition_session	inc/beap_hash.h	/^typedef struct _http_feition_session$/;"	s
accept	inc/http_parser.h	/^	char accept[512];$/;"	m	struct:dlp_http_post_head
add_IM_list	src/read_IM_config.c	/^int add_IM_list(_IM_HOST_URL_REG *nodelist, const char *host, const char * url, const char *reg)$/;"	f
add_att_nodelist	src/webmail_attach.c	/^int add_att_nodelist (struct att_node *nodelist,  int attlen,char *RawAttName,char *att_uuid)$/;"	f
add_name_nodelist	src/gmime_smtp.c	/^int add_name_nodelist (struct namenode* nodelistsrc, const char *filename, const char *uuidname, const char *filepath, unsigned char contentflag)$/;"	f
add_rcpt_to	src/smtpfunc.c	/^int add_rcpt_to (SmtpSession_t *p_session, char *packstr, unsigned int packlen)$/;"	f
alloc	inc/imembase.h	/^    void *(*alloc)(struct IALLOCATOR *, unsigned long);$/;"	m	struct:IALLOCATOR
alloc_page	inc/imembase.h	/^	void*(*alloc_page)(struct IMEMGFP *gfp);$/;"	m	struct:IMEMGFP
allocator	inc/imembase.h	/^	struct IALLOCATOR *allocator;   \/* memory allocator        *\/$/;"	m	struct:IMEMNODE	typeref:struct:IMEMNODE::IALLOCATOR
allocator	inc/imembase.h	/^	struct IALLOCATOR *allocator;$/;"	m	struct:IVECTOR	typeref:struct:IVECTOR::IALLOCATOR
array	inc/imembase.h	/^	struct IMCACHE_ARRAY array[IMUTEX_MAXCPU];$/;"	m	struct:IMEMCACHE	typeref:struct:IMEMCACHE::IMCACHE_ARRAY
att_node	inc/webmail_attach.h	/^struct att_node$/;"	s
att_uuid	inc/webmail_attach.h	/^	char att_uuid[UUID_LENGTH];\/*ÈôÑ‰ª∂Â≠òÂÇ®Âêçuuid*\/$/;"	m	struct:att_node
attach2_139	src/webmail_parser.c	/^int attach2_139(HttpSession* dlp_http, webmail_string_and_len *StoPT, webmail_string_and_len *StoMB, webmail_string_and_len *StoBY,dlp_webmail_info *webmail)$/;"	f
attach3_139	src/webmail_parser.c	/^int attach3_139(HttpSession* dlp_http,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
attach_139	src/webmail_parser.c	/^int attach_139(webmail_string_and_len *StoBY,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
attach_189	src/webmail_parser.c	/^int attach_189(webmail_string_and_len *StoPT,webmail_string_and_len *StoBY,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
attlen	inc/webmail_attach.h	/^	int attlen;  \/*Êñá‰ª∂ÈïøÂ∫¶*\/$/;"	m	struct:att_node
attr	inc/ring_buffer.h	/^	void *attr;$/;"	m	struct:session_buffer_node_tag
author	inc/update_json.h	/^    char author[512];$/;"	m	struct:tika_message
avial	inc/imembase.h	/^	int avial;$/;"	m	struct:IMCACHE_ARRAY
batchcount	inc/imembase.h	/^	int batchcount;$/;"	m	struct:IMCACHE_ARRAY
batchcount	inc/imembase.h	/^	unsigned long batchcount;$/;"	m	struct:IMEMCACHE
bcc	inc/gmime_smtp.h	/^	char *bcc;$/;"	m	struct:_envelope
bdat_last	inc/smtpfunc.h	/^  unsigned char bdat_last;           \/* ÊòØÂê¶ÊòØÊúÄÂêéÁöÑBDATÊï∞ÊçÆÂùó *\/$/;"	m	struct:zcsmtp_session_state
bdat_read_len	inc/smtpfunc.h	/^  unsigned int bdat_read_len;        \/* ÁõÆÂâçËØªÂà∞BDAT‰ø°ÊÅØÁöÑÈïøÂ∫¶*\/$/;"	m	struct:zcsmtp_session_state
bdat_seen	inc/smtpfunc.h	/^  unsigned char bdat_seen;           \/* Â∑≤ÁªèÁúãÂà∞‰∏Ä‰∏™BDAT ÂëΩ‰ª§ *\/$/;"	m	struct:zcsmtp_session_state
bdat_total_len	inc/smtpfunc.h	/^  unsigned int bdat_total_len;       \/* BDAT‰ø°ÊÅØÁöÑÊÄªÈïøÂ∫¶ *\/$/;"	m	struct:zcsmtp_session_state
bind2core	src/pfutils.c	/^int bind2core(u_int core_id)$/;"	f
bindthread2core	src/pfutils.c	/^int bindthread2core(pthread_t thread_id, u_int core_id)$/;"	f
block	inc/beap_hash.h	/^	unsigned short			block;	\/\/?????ƒº? ±?ƒ∑÷ø???¡ø$/;"	m	struct:_http_IM_session
block	inc/http_IM_parser.h	/^    unsigned int block;					\/\/‰º†ËæìÊñá‰ª∂Êó∂ÁöÑÂàÜÂùó‰ø°ÊÅØ$/;"	m	struct:IM_file_inf
block	inc/imembase.h	/^	unsigned long block;       $/;"	m	struct:IVECTOR
blocked	src/srv_echo.c	/^  int blocked;$/;"	m	struct:echo_req_data	file:
blocked_footer_message	src/srv_echo.c	/^static const char *blocked_footer_message =$/;"	v	file:
blocked_header_message	src/srv_echo.c	/^static const char *blocked_header_message =$/;"	v	file:
blog	src/http_IM_parser.c	/^int blog(HttpSession *dlp_http, char **http_IM_json, char *pattern,http_sbuffputdata sbuff_putdata, const int iringbuffer_ID)$/;"	f
body	src/srv_echo.c	/^  ci_simple_file_t *body;$/;"	m	struct:echo_req_data	file:
body_len	inc/http_parser.h	/^	int  body_len;$/;"	m	struct:dlp_http_post_head
boundary	inc/http_parser.h	/^	char boundary[100];$/;"	m	struct:dlp_http_post_head
boundary	inc/webmail_parser.h	/^	char boundary[MAX_BOUNDARY_LEN];\/*mimeÊ†ºÂºèÁöÑboundary*\/$/;"	m	struct:mail
bp	inc/http_IM_parser.h	/^    int     bp;		\/\/È£û‰ø°Á¶ªÁ∫øÊñá‰ª∂‰º†ËæìÊòØÁöÑÂàÜÂùó‰ø°ÊÅØÁöÑMessage Body‰∏≠Êñá‰ª∂Êï∞ÊçÆÂú®ÊâÄ‰º†ËæìÊñá‰ª∂Â§ßÂùóÊï∞ÊçÆÁöÑ‰ΩçÁΩÆÂÅèÁßªÈáè$/;"	m	struct:feition_data_post
bufctl	inc/imembase.h	/^	void*bufctl;$/;"	m	struct:IMEMSLAB
build_JVM	src/fileparse.c	/^void build_JVM()$/;"	f
build_jansson	inc/webmail_parser.h	/^	   build_jansson,\/*ÈúÄË¶ÅÁîüÊàêjansson‰∏≤*\/$/;"	e	enum:mail::__anon8
c_free	src/webmail_parser.c	/^    void c_free(char**obj)$/;"	f
c_malloc	src/webmail_parser.c	/^    int c_malloc(void **obj,int len)$/;"	f
cc	inc/gmime_smtp.h	/^	char *cc;$/;"	m	struct:_envelope
charsetConvert	src/ftp_extract.c	/^charsetConvert (const char *from_charset, const char *to_charset,$/;"	f
check	src/pfutils.c	/^	u_int16_t check;$/;"	m	struct:compact_ip_hdr	file:
check_for_first_free_ring_buffer	src/session_buf.c	/^int check_for_first_free_ring_buffer()$/;"	f
check_for_first_free_sring_buffer	src/session_buf.c	/^int check_for_first_free_sring_buffer()$/;"	f
cn_attach	src/webmail_parser.c	/^int cn_attach(webmail_string_and_len *StoBY,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
cn_mail	src/webmail_parser.c	/^int cn_mail(webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
cnpc_attach	src/webmail_parser.c	/^int cnpc_attach(webmail_string_and_len *StoPT,webmail_string_and_len *StoBY,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
cnpc_mail	src/webmail_parser.c	/^int cnpc_mail(webmail_string_and_len *StoPT,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
cntv_attach	src/webmail_parser.c	/^int cntv_attach(webmail_string_and_len *StoCK,webmail_string_and_len *StoBY,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
cntv_mail	src/webmail_parser.c	/^int cntv_mail(webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
code_convert	src/ftp_extract.c	/^code_convert (char *from_charset, char *to_charset, char *inbuf, size_t inlen,$/;"	f
color_limit	inc/imembase.h	/^	unsigned long color_limit;$/;"	m	struct:IMEMCACHE
color_max	inc/imembase.h	/^	unsigned long color_max;$/;"	m	struct:IMCACHE_LIST3
color_next	inc/imembase.h	/^	unsigned long color_next;$/;"	m	struct:IMCACHE_LIST3
coloroff	inc/imembase.h	/^	unsigned long coloroff;$/;"	m	struct:IMEMSLAB
comp_func	inc/beap_hash.h	/^    t_comp_func	comp_func;$/;"	m	struct:__anon2
compact_eth_hdr	src/pfutils.c	/^struct compact_eth_hdr {$/;"	s	file:
compact_ip_hdr	src/pfutils.c	/^struct compact_ip_hdr {$/;"	s	file:
compact_ipv6_hdr	src/pfutils.c	/^struct compact_ipv6_hdr {$/;"	s	file:
connection	inc/http_parser.h	/^	char connection[100];$/;"	m	struct:dlp_http_post_head
content	inc/beap_hash.h	/^    char*   content;$/;"	m	struct:__anon3
content	inc/beap_hash.h	/^    void *		content;$/;"	m	struct:stru_hash_bucket
content	inc/gmime_smtp.h	/^	} content;$/;"	m	struct:_bodystruct	typeref:struct:_bodystruct::__anon4
contentSize	inc/http_parser.h	/^	int  contentSize;$/;"	m	struct:dlp_http_post_head
content_len	src/srv_echo.c	/^ci_off_t content_len = 0;$/;"	v
content_length	inc/http_parser.h	/^	int  content_length;$/;"	m	struct:dlp_http_post_head
content_length	inc/http_parser.h	/^  uint64_t content_length; \/* # bytes in body (0 if no Content-Length header) *\/$/;"	m	struct:http_parser
content_type	inc/http_parser.h	/^	char content_type[HTTP_FILE_CONTENT_TYPE_MAX];$/;"	m	struct:dlp_http_post_head
contentflag	inc/gmime_smtp.h	/^	unsigned char contentflag;$/;"	m	struct:namenode
cookie	inc/http_parser.h	/^	char *cookie;$/;"	m	struct:dlp_http_post_head
count_free	inc/imembase.h	/^	unsigned long count_free;$/;"	m	struct:IMCACHE_LIST3
count_full	inc/imembase.h	/^	unsigned long count_full;$/;"	m	struct:IMCACHE_LIST3
count_partial	inc/imembase.h	/^	unsigned long count_partial;$/;"	m	struct:IMCACHE_LIST3
create_hash	src/beap_hash.c	/^hash_table * create_hash(int size, \\$/;"	f
create_pid_file	src/pfutils.c	/^void create_pid_file(char *pidFile)$/;"	f
create_ring_buffer	src/session_buf.c	/^int  create_ring_buffer(int iringbuffer_ID, int iringbuffer_qlength)$/;"	f
create_sring_buffer	src/session_buf.c	/^int  create_sring_buffer(int iringbuffer_ID, int iringbuffer_qlength)$/;"	f
crlf_seen	inc/smtpfunc.h	/^  unsigned char crlf_seen;           \/* ÁúãÂà∞‰∏Ä‰∏™CRLFÂú®ÂåÖÂ∞æ *\/$/;"	m	struct:zcsmtp_session_state
current_cpu	inc/imembase.h	/^	int (*current_cpu)(void);$/;"	m	struct:IMUTEXHOOK
daddr	inc/beap_hash.h	/^   u_int daddr;$/;"	m	struct:tuple4
daddr	inc/beap_hash.h	/^   unsigned int daddr;$/;"	m	struct:tuple5
daddr	src/pfutils.c	/^	u_int32_t daddr;$/;"	m	struct:compact_ip_hdr	file:
daemonize	src/pfutils.c	/^void daemonize()$/;"	f
data	inc/http_parser.h	/^  void *data; \/* A pointer to get hook to the "connection" or "socket" object *\/$/;"	m	struct:http_parser
data	inc/imembase.h	/^	unsigned char*data;       $/;"	m	struct:IVECTOR
data_seen	inc/smtpfunc.h	/^  unsigned char data_seen;           \/* Â∑≤ÁªèÁúãÂà∞‰∏Ä‰∏™DATA ÂëΩ‰ª§ *\/$/;"	m	struct:zcsmtp_session_state
data_store_flag	inc/smtpfunc.h	/^    zcsmtp_data_store_flag_t data_store_flag;  \/* ‰ø°‰Ωì‰º†ËæìÊ†áÂøó,Êûö‰∏æ *\/$/;"	m	struct:SmtpSession
date	inc/gmime_smtp.h	/^	char *date;$/;"	m	struct:_envelope
dbg_log	inc/plog.h	/^zlog_category_t* dbg_log;$/;"	v
delete_hash	src/beap_hash.c	/^void delete_hash(hash_table *tbl)$/;"	f
delete_hash_keep_content	src/beap_hash.c	/^void delete_hash_keep_content(hash_table *tbl)$/;"	f
delta_time	src/pfutils.c	/^double delta_time(struct timeval *now, struct timeval *before)$/;"	f
description	src/http_parser.c	/^  const char *description;$/;"	m	struct:__anon9	file:
dest	inc/beap_hash.h	/^   u_short dest;$/;"	m	struct:tuple4
dest	inc/beap_hash.h	/^   unsigned short dest;$/;"	m	struct:tuple5
destory_JVM	src/fileparse.c	/^void destory_JVM()$/;"	f
detect	src/ftp_extract.c	/^detect (char *buffer, int len)$/;"	f
dir	inc/extractmain.h	/^   char dir[128];  \/* Â≠òÂÇ®json‰∏≤ÁöÑÊñá‰ª∂Ë∑ØÂæÑ*\/$/;"	m	struct:path_msg
dir	inc/http_parser.h	/^	char dir[256];$/;"	m	struct:dlp_http_post_head
dispose_STARTTLS_cmd	src/smtp_dissect.c	/^int dispose_STARTTLS_cmd (SmtpSession_t	*p_sessionsrc, char *packstr, unsigned int packlen)$/;"	f
dispose_smtp_cmd	src/smtp_dissect.c	/^int dispose_smtp_cmd (SmtpSession_t	*p_sessionsrc, char *packstr, unsigned int packlen)$/;"	f
dispose_smtp_mail_body_bdat	src/smtp_dissect.c	/^int dispose_smtp_mail_body_bdat (SmtpSession_t *p_sessionsrc, char *packstr, unsigned int packlen, smtp_sbuffputdata sbuff_putdata, int sbuffer_id)$/;"	f
dispose_smtp_mail_body_data	src/smtp_dissect.c	/^int dispose_smtp_mail_body_data (SmtpSession_t *p_sessionsrc, char *packstr, unsigned int packlen, smtp_sbuffputdata sbuff_putdata, int sbuffer_id)$/;"	f
dispose_smtp_response	src/smtp_dissect.c	/^int dispose_smtp_response (SmtpSession_t *p_sessionsrc, char *packstr, unsigned int packlen)$/;"	f
disposition	inc/gmime_smtp.h	/^	} disposition;$/;"	m	struct:_bodystruct	typeref:struct:_bodystruct::__anon5
dlp_http_file_node	inc/http_parser.h	/^typedef struct dlp_http_file_node{$/;"	s
dlp_http_file_node_t	inc/http_parser.h	/^} dlp_http_file_node_t;$/;"	t	typeref:struct:dlp_http_file_node
dlp_http_post_head	inc/http_parser.h	/^typedef struct dlp_http_post_head{$/;"	s
dlp_http_post_head	inc/http_parser.h	/^} dlp_http_post_head;$/;"	t	typeref:struct:dlp_http_post_head
dlp_webmail_info	inc/webmail_parser.h	/^}dlp_webmail_info;$/;"	t	typeref:struct:mail
do_http_file	src/parsertrace.c	/^int do_http_file(const char *packet_content, int len, struct tuple4 *key, http_sbuffputdata http_sbuff_putdata,const int iringbuffer_ID)$/;"	f
dot_seen	inc/smtpfunc.h	/^  unsigned char dot_seen;            \/* ÁúãÂà∞‰∏Ä‰∏™DATAÁªìÊùüÁÇπ *\/$/;"	m	struct:zcsmtp_session_state
drop_privileges	src/pfutils.c	/^void drop_privileges(char *username)$/;"	f
echo_check_preview_handler	src/srv_echo.c	/^echo_check_preview_handler (char *preview_data, int preview_data_len,$/;"	f
echo_close_service	src/srv_echo.c	/^echo_close_service ()$/;"	f
echo_end_of_data_handler	src/srv_echo.c	/^echo_end_of_data_handler (ci_request_t * req)$/;"	f
echo_init_request_data	src/srv_echo.c	/^echo_init_request_data (ci_request_t * req)$/;"	f
echo_init_service	src/srv_echo.c	/^echo_init_service (ci_service_xdata_t * srv_xdata,$/;"	f
echo_io	src/srv_echo.c	/^echo_io (char *wbuf, int *wlen, char *rbuf, int *rlen, int iseof,$/;"	f
echo_read_from_net	src/srv_echo.c	/^echo_read_from_net (char *buf, int len, int iseof, ci_request_t * req)$/;"	f
echo_release_request_data	src/srv_echo.c	/^echo_release_request_data (void *data)$/;"	f
echo_req_data	src/srv_echo.c	/^struct echo_req_data$/;"	s	file:
echo_write_to_net	src/srv_echo.c	/^echo_write_to_net (char *buf, int len, ci_request_t * req)$/;"	f
empty_buffer	inc/ring_buffer.h	/^	sem_t empty_buffer;$/;"	m	struct:ring_buffer_holder
empty_buffer	inc/ring_buffer.h	/^	sem_t empty_buffer;$/;"	m	struct:session_buffer_holder
encode_guess	src/ftp_extract.c	/^encode_guess (char *s, int len, char *in_str, int str_len, char *out_str,$/;"	f
encoding	inc/gmime_smtp.h	/^	char *encoding;$/;"	m	struct:_bodystruct
end	inc/gmime_smtp.h	/^   int end;$/;"	m	struct:smtp_data
entry	inc/imembase.h	/^	void *entry[IMCACHE_ARRAYLIMIT];$/;"	m	struct:IMCACHE_ARRAY
envelope	inc/gmime_smtp.h	/^	struct _envelope *envelope;$/;"	m	struct:_bodystruct	typeref:struct:_bodystruct::_envelope
eof	src/srv_echo.c	/^  int eof;$/;"	m	struct:echo_req_data	file:
err_log	inc/plog.h	/^zlog_category_t* err_log;$/;"	v
error_page	src/srv_echo.c	/^  ci_membuf_t *error_page;$/;"	m	struct:echo_req_data	file:
extra	inc/imembase.h	/^	void *extra;                    \/* extra user data         *\/$/;"	m	struct:IMEMNODE
extra	inc/imembase.h	/^	void *extra;$/;"	m	struct:IMCACHE_LIST3
extra	inc/imembase.h	/^	void *extra;$/;"	m	struct:IMEMGFP
extra	inc/imembase.h	/^	void*extra;$/;"	m	struct:IMEMSLAB
extract_http_info	src/srv_echo.c	/^extract_http_info (ci_request_t * req, ci_headers_list_t * req_header,$/;"	f
feition_5_5_38_host	src/http_IM_parser.c	/^const char		*feition_5_5_38_host = "caiyun.feixin.10086.cn";$/;"	v
feition_5_5_38_url	src/http_IM_parser.c	/^const char 		*feition_5_5_38_url = "\/storageWeb\/servlet\/uploadFileServlet\\\\?uploadCode=.*&txType=.*&oprChannel=.*&dom=.*";$/;"	v
feition_data_post	inc/http_IM_parser.h	/^struct feition_data_post$/;"	s
field_data	inc/http_parser.h	/^  } field_data[UF_MAX];$/;"	m	struct:http_parser_url	typeref:struct:http_parser_url::__anon6
field_set	inc/http_parser.h	/^  uint16_t field_set;           \/* Bitmask of (1 << UF_*) values *\/$/;"	m	struct:http_parser_url
file_extract_pthread	src/extractmain.c	/^int file_extract_pthread (char *jsonstr, char *strpath, unsigned long max_filesize)$/;"	f
file_name	inc/http_parser.h	/^	char file_name[1024];$/;"	m	struct:dlp_http_post_head
file_name_length	inc/http_parser.h	/^	int  file_name_length;$/;"	m	struct:dlp_http_post_head
filekey	inc/http_IM_parser.h	/^	char filekey[256];					\/\/QQ2013Á¶ªÁ∫øÊñá‰ª∂‰º†ËæìÊòØÁöÑfile ID$/;"	m	struct:IM_file_inf
filename	inc/gmime_smtp.h	/^    char *filename;$/;"	m	struct:namenode
filename	inc/http_parser.h	/^	char *filename;$/;"	m	struct:dlp_http_file_node
filenode	inc/webmail_parser.h	/^	struct att_node *filenode; \/*ÈôÑ‰ª∂ÈìæË°®*\/$/;"	m	struct:mail	typeref:struct:mail::att_node
filepath	inc/gmime_smtp.h	/^	char *filepath;$/;"	m	struct:namenode
filesize	inc/http_IM_parser.h	/^    unsigned long filesize;				\/\/Êñá‰ª∂Â§ßÂ∞è$/;"	m	struct:IM_file_inf
filetype	inc/update_json.h	/^	char filetype[16];   \/\/file type$/;"	m	struct:tika_message
find_hash	src/beap_hash.c	/^hash_bucket * find_hash(hash_table * tbl, void * pos, int len)$/;"	f
finish	inc/smtpfunc.h	/^	unsigned int finish;               \/* Âà§Êñ≠‰ø°‰ΩìÁªìÊùüÁöÑÊ†áÂøó,finish=1ÁªìÊùü,0Êú™ÁªìÊùü*\/ $/;"	m	struct:mail_body_attribute
five_attr	inc/ring_buffer.h	/^typedef struct five_attr {$/;"	s
flag	inc/beap_hash.h	/^     int                  flag;$/;"	m	struct:https
flag	inc/beap_hash.h	/^    int                  flag;$/;"	m	struct:__anon3
flag	inc/http_parser.h	/^	int  flag;$/;"	m	struct:dlp_http_post_head
flags	inc/http_parser.h	/^  unsigned int flags : 6;        \/* F_* values from 'flags' enum; semi-public *\/$/;"	m	struct:http_parser
flags	inc/http_parser.h	/^enum flags$/;"	g
flags	inc/imembase.h	/^	int flags;$/;"	m	struct:IMCACHE_LIST3
flags	inc/imembase.h	/^	int flags;$/;"	m	struct:IMEMCACHE
flow_lbl	src/pfutils.c	/^	u_int8_t flow_lbl[3];$/;"	m	struct:compact_ipv6_hdr	file:
fn	inc/beap_hash.h	/^	char					fn[256];\/\/‘≠ º?ƒº???$/;"	m	struct:_http_IM_session
fn	inc/beap_hash.h	/^    char                            fn[256];$/;"	m	struct:_http_feition_session
fn	inc/http_IM_parser.h	/^	char fn[256];						\/\/ÂéüÂßãÊñá‰ª∂Âêç$/;"	m	struct:IM_file_inf
four_attr	inc/beap_hash.h	/^	 struct tuple4 four_attr; \/\/by niulw add $/;"	m	struct:tuple5	typeref:struct:tuple5::tuple4
four_tuple	inc/ring_buffer.h	/^struct four_tuple {$/;"	s
four_tuple_t	inc/ring_buffer.h	/^typedef struct four_tuple four_tuple_t;$/;"	t	typeref:struct:four_tuple
frag_off	src/pfutils.c	/^	u_int16_t frag_off;$/;"	m	struct:compact_ip_hdr	file:
free	inc/imembase.h	/^    void (*free)(struct IALLOCATOR *, void *);$/;"	m	struct:IALLOCATOR
free_accessory	src/smtpfunc.c	/^int free_accessory(smtp_accessory_t *smtp_accessory)$/;"	f
free_att_nodelist	src/webmail_attach.c	/^int free_att_nodelist (struct att_node *nodelist)$/;"	f
free_limit	inc/imembase.h	/^	unsigned long free_limit;$/;"	m	struct:IMCACHE_LIST3
free_mail_body	src/smtpfunc.c	/^int free_mail_body(mail_body_attribute_t *mail_body)$/;"	f
free_name_nodelist	src/gmime_smtp.c	/^int free_name_nodelist (struct namenode *nodelist)$/;"	f
free_objects	inc/imembase.h	/^	unsigned long free_objects;$/;"	m	struct:IMCACHE_LIST3
free_page	inc/imembase.h	/^	void (*free_page)(struct IMEMGFP *gfp, void *ptr);$/;"	m	struct:IMEMGFP
free_rcpt_to	src/smtpfunc.c	/^int free_rcpt_to(rcpt_to_t *rcpt_to)$/;"	f
free_smtp	src/smtpfunc.c	/^int free_smtp (SmtpSession_t *p_session)$/;"	f
freeold_copyfromnew_freenew	src/update_json.c	/^int freeold_copyfromnew_freenew (char **oldstr, char **newstr)$/;"	f
from	inc/gmime_smtp.h	/^	char *from;$/;"	m	struct:_envelope
fs	inc/beap_hash.h	/^	unsigned long			fs;		\/\/?ƒº???–°$/;"	m	struct:_http_IM_session
fs	inc/beap_hash.h	/^    unsigned long                   fs;$/;"	m	struct:_http_feition_session
ftl_log	inc/plog.h	/^zlog_category_t* ftl_log;$/;"	v
ftp_jsonstr	src/ftp_extract.c	/^ftp_jsonstr (SESSION_BUFFER_NODE * pronodesrc, char **jsonstr)$/;"	f
ftp_session_tbl	src/webmail_parser.c	/^hash_table *ftp_session_tbl;$/;"	v
full_buffer	inc/ring_buffer.h	/^	sem_t full_buffer;$/;"	m	struct:ring_buffer_holder
full_buffer	inc/ring_buffer.h	/^	sem_t full_buffer;$/;"	m	struct:session_buffer_holder
g2u	src/ftp_extract.c	/^g2u (char *inbuf, size_t inlen, char *outbuf, size_t outlen)$/;"	f
gbk2utf8	src/ftp_extract.c	/^gbk2utf8 (char *utfstr, const char *srcstr, int maxutfstrlen)$/;"	f
generate_redirect_page	src/srv_echo.c	/^generate_redirect_page (char *redirect, ci_request_t * req,$/;"	f
get_bdat_msg	src/smtpfunc.c	/^int get_bdat_msg (SmtpSession_t *p_session, char *packstr, unsigned int packlen)$/;"	f
get_file_num	src/update_json.c	/^int get_file_num(char *jsonstr, int *file_num)$/;"	f
get_file_path	src/update_json.c	/^int get_file_path (char *jsonstr,  char *filepath, int file_flag)$/;"	f
get_file_path_absolute	src/update_json.c	/^int get_file_path_absolute (char *jsonsrc, char *filefull_fname, int file_flag)$/;"	f
get_file_size	src/extractmain.c	/^unsigned long get_file_size (const char *path)$/;"	f
get_file_size	src/ftp_extract.c	/^get_file_size (const char *path)$/;"	f	file:
get_file_type_author	src/update_json.c	/^int get_file_type_author (char *jsonstr, tika_message_s *tika_message)$/;"	f
get_file_value	src/update_json.c	/^int get_file_value(char *jsonstr, char *key, char *file_value, int file_flag)$/;"	f
get_mail_addr	src/smtpfunc.c	/^int get_mail_addr(char *mailstr, char **mailaddr)$/;"	f
get_protocol_type	src/update_json.c	/^int get_protocol_type (char *jsonstr)$/;"	f
get_sys_time	src/http_IM_parser.c	/^char *get_sys_time()$/;"	f
get_tuple_name	src/webmail_parser.c	/^int get_tuple_name(HttpSession*dlp_http , char tuple_name[128]  ){$/;"	f
getticks	src/pfutils.c	/^static __inline__ ticks getticks(void)$/;"	f	file:
gfp	inc/imembase.h	/^	struct IMEMGFP *gfp;$/;"	m	struct:IMCACHE_LIST3	typeref:struct:IMCACHE_LIST3::IMEMGFP
gfp	inc/imembase.h	/^	struct IMEMGFP *gfp;$/;"	m	struct:IMEMCACHE	typeref:struct:IMEMCACHE::IMEMGFP
gmime_parse_mailbody	src/smtp_dissect.c	/^int gmime_parse_mailbody (SmtpSession_t *p_session, char **projson)$/;"	f
gmime_tika_send	src/smtp_dissect.c	/^int gmime_tika_send (struct tuple4 *key, unsigned long max_filesize)$/;"	f
grow_limit	inc/imembase.h	/^	long grow_limit;                \/* limit of growing        *\/$/;"	m	struct:IMEMNODE
h_C	src/http_parser.c	/^  , h_C$/;"	e	enum:header_states	file:
h_CO	src/http_parser.c	/^  , h_CO$/;"	e	enum:header_states	file:
h_CON	src/http_parser.c	/^  , h_CON$/;"	e	enum:header_states	file:
h_connection	src/http_parser.c	/^  , h_connection$/;"	e	enum:header_states	file:
h_connection_close	src/http_parser.c	/^  , h_connection_close$/;"	e	enum:header_states	file:
h_connection_keep_alive	src/http_parser.c	/^  , h_connection_keep_alive$/;"	e	enum:header_states	file:
h_content_length	src/http_parser.c	/^  , h_content_length$/;"	e	enum:header_states	file:
h_dest	src/pfutils.c	/^	unsigned char h_dest[ETH_ALEN];$/;"	m	struct:compact_eth_hdr	file:
h_general	src/http_parser.c	/^  { h_general = 0$/;"	e	enum:header_states	file:
h_matching_connection	src/http_parser.c	/^  , h_matching_connection$/;"	e	enum:header_states	file:
h_matching_connection_close	src/http_parser.c	/^  , h_matching_connection_close$/;"	e	enum:header_states	file:
h_matching_connection_keep_alive	src/http_parser.c	/^  , h_matching_connection_keep_alive$/;"	e	enum:header_states	file:
h_matching_content_length	src/http_parser.c	/^  , h_matching_content_length$/;"	e	enum:header_states	file:
h_matching_proxy_connection	src/http_parser.c	/^  , h_matching_proxy_connection$/;"	e	enum:header_states	file:
h_matching_transfer_encoding	src/http_parser.c	/^  , h_matching_transfer_encoding$/;"	e	enum:header_states	file:
h_matching_transfer_encoding_chunked	src/http_parser.c	/^  , h_matching_transfer_encoding_chunked$/;"	e	enum:header_states	file:
h_matching_upgrade	src/http_parser.c	/^  , h_matching_upgrade$/;"	e	enum:header_states	file:
h_proto	src/pfutils.c	/^	u_int16_t h_proto;$/;"	m	struct:compact_eth_hdr	file:
h_source	src/pfutils.c	/^	unsigned char h_source[ETH_ALEN];$/;"	m	struct:compact_eth_hdr	file:
h_transfer_encoding	src/http_parser.c	/^  , h_transfer_encoding$/;"	e	enum:header_states	file:
h_transfer_encoding_chunked	src/http_parser.c	/^  , h_transfer_encoding_chunked$/;"	e	enum:header_states	file:
h_upgrade	src/http_parser.c	/^  , h_upgrade$/;"	e	enum:header_states	file:
hash_bucket	inc/beap_hash.h	/^}hash_bucket;$/;"	t	typeref:struct:stru_hash_bucket
hash_func	inc/beap_hash.h	/^    t_hash_func	hash_func;$/;"	m	struct:__anon2
hash_ptr	inc/beap_hash.h	/^}hash_ptr;$/;"	t	typeref:struct:__anon1
hash_table	inc/beap_hash.h	/^}hash_table;$/;"	t	typeref:struct:__anon2
hashtable	inc/beap_hash.h	/^    hash_bucket **hashtable;$/;"	m	struct:__anon2
head_index	inc/http_parser.h	/^  int head_index;\/\/add lining$/;"	m	struct:http_parser
header_state	inc/http_parser.h	/^  unsigned int header_state : 8; \/* enum header_state from http_parser.c *\/$/;"	m	struct:http_parser
header_states	src/http_parser.c	/^enum header_states$/;"	g	file:
hex2num	src/webmail_parser.c	/^int hex2num(char c)$/;"	f
hextoi	src/http_IM_parser.c	/^inline char hextoi(char hexch)$/;"	f
hop_limit	src/pfutils.c	/^	u_int8_t hop_limit;$/;"	m	struct:compact_ipv6_hdr	file:
host	inc/beap_hash.h	/^    char host[256];$/;"	m	struct:http_feition_tuple2
host	inc/http_parser.h	/^	char host[HTTP_FILE_HOST_MAX];$/;"	m	struct:dlp_http_post_head
host	inc/read_IM_config.h	/^		char 	*host;$/;"	m	struct:_IM_HOST_URL_REG
host_ori_ref	inc/webmail_parser.h	/^	char host_ori_ref[HTTP_FILE_HOST_MAX+HTTP_FILE_ORIGIN_MAX+HTTP_FILE_REFERER_MAX];\/*Â∞ÜhttpÂ§¥‰∏≠ÁöÑhost„ÄÅorigin„ÄÅrefererÊîæÂà∞‰∏Ä‰∏™Êï∞ÁªÑÈáå*\/$/;"	m	struct:mail
http	inc/beap_hash.h	/^     void             *http;$/;"	m	struct:https
http	inc/http_parser.h	/^  void *http;\/\/add lining$/;"	m	struct:http_parser
http	src/parsertrace.c	/^int http( HttpSession *p_session)$/;"	f
http_IM	src/http_IM_parser.c	/^int http_IM(HttpSession *dlp_http, char **http_IM_json, http_sbuffputdata sbuff_putdata, const int iringbuffer_ID)$/;"	f
http_IM_pro_jsonstr	src/http_IM_parser.c	/^int http_IM_pro_jsonstr(HttpSession* dlp_http, dlp_http_post_head* http_session, struct IM_file_inf *IM_session, $/;"	f
http_IM_session	inc/beap_hash.h	/^}http_IM_session;$/;"	t	typeref:struct:_http_IM_session
http_IM_tuple5	inc/beap_hash.h	/^struct http_IM_tuple5$/;"	s
http_QQ_2013	src/http_IM_parser.c	/^int http_QQ_2013(HttpSession *dlp_http, char **http_IM_json, http_sbuffputdata sbuff_putdata, const int iringbuffer_ID)$/;"	f
http_QQ_2014	src/http_IM_parser.c	/^int http_QQ_2014(HttpSession *dlp_http, char **http_IM_json,http_sbuffputdata sbuff_putdata, const int iringbuffer_ID)$/;"	f
http_QQ_2014_GOS	src/http_IM_parser.c	/^int http_QQ_2014_GOS(HttpSession *dlp_http, char **http_IM_json,http_sbuffputdata sbuff_putdata, const int iringbuffer_ID)$/;"	f
http_Yahoo_Messager	src/http_IM_parser.c	/^int http_Yahoo_Messager(HttpSession *dlp_http, char **http_IM_json, http_sbuffputdata sbuff_putdata, const int iringbuffer_ID)$/;"	f
http_baidu_pan	src/http_netdisk.c	/^int http_baidu_pan(HttpSession *dlp_http, char **http_IM_json,http_sbuffputdata sbuff_putdata, const int iringbuffer_ID)$/;"	f
http_body_is_final	src/http_parser.c	/^http_body_is_final(const struct http_parser *parser) {$/;"	f
http_cb	inc/http_parser.h	/^typedef int (*http_cb) (http_parser*);$/;"	t
http_content_type	src/srv_echo.c	/^http_content_type (ci_request_t * req)$/;"	f
http_data_cb	inc/http_parser.h	/^typedef int (*http_data_cb) (http_parser*, const char *at, size_t length);$/;"	t
http_errno	inc/http_parser.h	/^  unsigned int http_errno : 7;$/;"	m	struct:http_parser
http_errno	inc/http_parser.h	/^enum http_errno {$/;"	g
http_errno_description	src/http_parser.c	/^http_errno_description(enum http_errno err) {$/;"	f
http_errno_name	src/http_parser.c	/^http_errno_name(enum http_errno err) {$/;"	f
http_feition	src/http_IM_parser.c	/^int http_feition(HttpSession *dlp_http, char **http_IM_json,http_sbuffputdata sbuff_putdata, const int iringbuffer_ID)$/;"	f
http_feition_5_5_38	src/http_fei_xin.c	/^ int http_feition_5_5_38(HttpSession *dlp_http, char **http_IM_json,http_sbuffputdata sbuff_putdata, const int iringbuffer_ID)$/;"	f
http_feition_session	inc/beap_hash.h	/^}http_feition_session;$/;"	t	typeref:struct:_http_feition_session
http_feition_tuple2	inc/beap_hash.h	/^struct http_feition_tuple2$/;"	s
http_host_state	src/http_parser.c	/^enum http_host_state$/;"	g	file:
http_info	src/srv_echo.c	/^struct http_info$/;"	s	file:
http_major	inc/http_parser.h	/^  unsigned short http_major;$/;"	m	struct:http_parser
http_mch	src/parsertrace.c	/^int http_mch(testhttp_string_and_len ** var, testhttp_string_and_len ** Sto,const char *pattern)$/;"	f
http_message_needs_eof	src/http_parser.c	/^http_message_needs_eof (const http_parser *parser)$/;"	f
http_method	inc/http_parser.h	/^enum http_method$/;"	g
http_method_str	src/http_parser.c	/^http_method_str (enum http_method m)$/;"	f
http_minor	inc/http_parser.h	/^  unsigned short http_minor;$/;"	m	struct:http_parser
http_parse_host	src/http_parser.c	/^http_parse_host(const char * buf, struct http_parser_url *u, int found_at) {$/;"	f	file:
http_parse_host_char	src/http_parser.c	/^http_parse_host_char(enum http_host_state s, const char ch) {$/;"	f	file:
http_parser	inc/http_parser.h	/^struct http_parser {$/;"	s
http_parser	inc/http_parser.h	/^typedef struct http_parser http_parser;$/;"	t	typeref:struct:http_parser
http_parser_execute	src/http_parser.c	/^size_t http_parser_execute (http_parser *parser,$/;"	f
http_parser_h	inc/http_parser.h	22;"	d
http_parser_init	src/http_parser.c	/^void  http_parser_init (http_parser *parser, enum http_parser_type t,HttpSession *p_session)$/;"	f
http_parser_parse_url	src/http_parser.c	/^http_parser_parse_url(const char *buf, size_t buflen, int is_connect,$/;"	f
http_parser_pause	src/http_parser.c	/^http_parser_pause(http_parser *parser, int paused) {$/;"	f
http_parser_settings	inc/http_parser.h	/^struct http_parser_settings {$/;"	s
http_parser_settings	inc/http_parser.h	/^typedef struct http_parser_settings http_parser_settings;$/;"	t	typeref:struct:http_parser_settings
http_parser_type	inc/http_parser.h	/^enum http_parser_type { HTTP_REQUEST, HTTP_RESPONSE, HTTP_BOTH };$/;"	g
http_parser_url	inc/http_parser.h	/^struct http_parser_url {$/;"	s
http_parser_url_fields	inc/http_parser.h	/^enum http_parser_url_fields$/;"	g
http_parser_version	src/http_parser.c	/^http_parser_version(void) {$/;"	f
http_sbuffputdata	inc/http_parser.h	/^typedef int (*http_sbuffputdata) (int iringbuffer_ID, SESSION_BUFFER_NODE ft);$/;"	t
http_should_keep_alive	src/http_parser.c	/^http_should_keep_alive (const http_parser *parser)$/;"	f
http_strerror_tab	src/http_parser.c	/^} http_strerror_tab[] = {$/;"	v	typeref:struct:__anon9	file:
http_upload_json	src/extractmain.c	/^int http_upload_json (SESSION_BUFFER_NODE *pronode, unsigned long max_filesize)$/;"	f
https	inc/beap_hash.h	/^typedef struct https$/;"	s
httpupload_pro_jsonstr	src/ftp_extract.c	/^httpupload_pro_jsonstr (SESSION_BUFFER_NODE * pronodesrc, char **jsonstr)$/;"	f
id	src/pfutils.c	/^	u_int16_t id;$/;"	m	struct:compact_ip_hdr	file:
ihl	src/pfutils.c	/^	u_int8_t ihl:4, version:4;$/;"	m	struct:compact_ip_hdr	file:
ikmem_allocator	src/imembase.c	/^struct IALLOCATOR ikmem_allocator = $/;"	v	typeref:struct:IALLOCATOR
ikmem_allocator_free	src/imembase.c	/^static void ikmem_allocator_free(struct IALLOCATOR *a, void *ptr)$/;"	f	file:
ikmem_allocator_malloc	src/imembase.c	/^static void* ikmem_allocator_malloc(struct IALLOCATOR *a, unsigned long len)$/;"	f	file:
ikmem_append	src/imembase.c	/^static void ikmem_append(unsigned long objsize, int approxy)$/;"	f	file:
ikmem_array	src/imembase.c	/^static struct IMEMCACHE **ikmem_array = NULL;$/;"	v	typeref:struct:IMEMCACHE	file:
ikmem_cache_alloc	src/imembase.c	/^void *ikmem_cache_alloc(struct IMEMCACHE *cache)$/;"	f
ikmem_cache_free	src/imembase.c	/^void ikmem_cache_free(struct IMEMCACHE *cache, void *ptr)$/;"	f
ikmem_choose_gfp	src/imembase.c	/^static struct IMEMGFP *ikmem_choose_gfp(unsigned long objsize, long *w)$/;"	f	file:
ikmem_choose_size	src/imembase.c	/^static struct IMEMCACHE *ikmem_choose_size(unsigned long size)$/;"	f	file:
ikmem_cost	src/imembase.c	/^static unsigned long ikmem_cost(unsigned long objsize, struct IMEMGFP *gfp)$/;"	f	file:
ikmem_count	src/imembase.c	/^static int ikmem_count = 0;$/;"	v	file:
ikmem_create	src/imembase.c	/^struct IMEMCACHE* ikmem_create(const char *name, unsigned long size)$/;"	f
ikmem_delete	src/imembase.c	/^void ikmem_delete(struct IMEMCACHE *cache)$/;"	f
ikmem_free	src/imembase.c	/^void ikmem_free(void *ptr)$/;"	f
ikmem_get	src/imembase.c	/^struct IMEMCACHE* ikmem_get(const char *name)$/;"	f
ikmem_head	src/imembase.c	/^static struct IQUEUEHEAD ikmem_head;$/;"	v	typeref:struct:IQUEUEHEAD	file:
ikmem_info	src/imembase.c	/^void ikmem_info(unsigned long *inuse, unsigned long *total)$/;"	f
ikmem_init	src/imembase.c	/^void ikmem_init(unsigned long *sizelist)$/;"	f
ikmem_inited	src/imembase.c	/^static int ikmem_inited = 0;$/;"	v	file:
ikmem_insert	src/imembase.c	/^static int ikmem_insert(unsigned long size, struct IMEMGFP *gfp)$/;"	f	file:
ikmem_inuse	src/imembase.c	/^static unsigned long ikmem_inuse;$/;"	v	file:
ikmem_lock	src/imembase.c	/^static imutex_t ikmem_lock = NULL;$/;"	v	file:
ikmem_lookup	src/imembase.c	/^static struct IMEMCACHE **ikmem_lookup = NULL;$/;"	v	typeref:struct:IMEMCACHE	file:
ikmem_malloc	src/imembase.c	/^void* ikmem_malloc(unsigned long size)$/;"	f
ikmem_node	src/imembase.c	/^static struct IMEMNODE ikmem_node;$/;"	v	typeref:struct:IMEMNODE	file:
ikmem_option	src/imembase.c	/^void ikmem_option(unsigned long watermark)$/;"	f
ikmem_ptr_size	src/imembase.c	/^unsigned long ikmem_ptr_size(void *ptr)$/;"	f
ikmem_quit	src/imembase.c	/^void ikmem_quit(void)$/;"	f
ikmem_range_high	src/imembase.c	/^static unsigned long ikmem_range_high = 0;$/;"	v	file:
ikmem_range_low	src/imembase.c	/^static unsigned long ikmem_range_low = ~0ul;$/;"	v	file:
ikmem_realloc	src/imembase.c	/^void* ikmem_realloc(void *ptr, unsigned long size)$/;"	f
ikmem_record	src/imembase.c	/^static struct IVECTOR ikmem_record;$/;"	v	typeref:struct:IVECTOR	file:
ikmem_root	src/imembase.c	/^static struct IMEMCACHE *ikmem_root = NULL;$/;"	v	typeref:struct:IMEMCACHE	file:
ikmem_search	src/imembase.c	/^static struct IMEMCACHE* ikmem_search(const char *name, int needlock)$/;"	f	file:
ikmem_setup_caches	src/imembase.c	/^static void ikmem_setup_caches(unsigned long *sizelist)$/;"	f	file:
ikmem_sizemap_l1	src/imembase.c	/^static void *ikmem_sizemap_l1[257];$/;"	v	file:
ikmem_sizemap_l2	src/imembase.c	/^static void *ikmem_sizemap_l2[257];$/;"	v	file:
ikmem_vector	src/imembase.c	/^static struct IVECTOR ikmem_vector;$/;"	v	typeref:struct:IVECTOR	file:
ikmem_waste	src/imembase.c	/^static unsigned long ikmem_waste(unsigned long objsize, unsigned long psize)$/;"	f	file:
ikmem_water_mark	src/imembase.c	/^static unsigned long ikmem_water_mark = 0;$/;"	v	file:
imcache_alloc	src/imembase.c	/^static void *imcache_alloc(struct IMEMCACHE *cache)$/;"	f	file:
imcache_calculate	src/imembase.c	/^static void imcache_calculate(struct IMEMCACHE *cache)$/;"	f	file:
imcache_check_magic	src/imembase.c	/^static int imcache_check_magic(void *ptr)$/;"	f	file:
imcache_create	src/imembase.c	/^static struct IMEMCACHE *imcache_create(const char *name, $/;"	f	file:
imcache_destroy	src/imembase.c	/^static void imcache_destroy(struct IMEMCACHE *cache)$/;"	f	file:
imcache_drain_list	src/imembase.c	/^int imcache_drain_list(struct IMCACHE_LIST3 *mlist, int tofree, int id)$/;"	f	file:
imcache_fill_batch	src/imembase.c	/^static int imcache_fill_batch(struct IMEMCACHE *cache, int array_index)$/;"	f	file:
imcache_free	src/imembase.c	/^static void *imcache_free(struct IMEMCACHE *cache, void *ptr)$/;"	f	file:
imcache_gfp_alloc	src/imembase.c	/^static void *imcache_gfp_alloc(struct IMEMGFP *gfp)$/;"	f	file:
imcache_gfp_free	src/imembase.c	/^static void imcache_gfp_free(struct IMEMGFP *gfp, void *ptr)$/;"	f	file:
imcache_gfp_init	src/imembase.c	/^static void imcache_gfp_init(struct IMEMCACHE *cache)$/;"	f	file:
imcache_init	src/imembase.c	/^static void imcache_init(void)$/;"	f	file:
imcache_inited	src/imembase.c	/^static int imcache_inited = 0;$/;"	v	file:
imcache_list_alloc	src/imembase.c	/^static void* imcache_list_alloc(struct IMCACHE_LIST3 *mlist)$/;"	f	file:
imcache_list_destroy	src/imembase.c	/^static void imcache_list_destroy(struct IMCACHE_LIST3 *mlist)$/;"	f	file:
imcache_list_free	src/imembase.c	/^static void imcache_list_free(struct IMCACHE_LIST3 *mlist, void *ptr)$/;"	f	file:
imcache_list_init	src/imembase.c	/^static void imcache_list_init(struct IMCACHE_LIST3 *mlist, $/;"	f	file:
imcache_mutex	src/imembase.c	/^static imutex_t imcache_mutex = NULL;$/;"	v	file:
imcache_node	src/imembase.c	/^static struct IMEMNODE imcache_node;$/;"	v	typeref:struct:IMEMNODE	file:
imcache_quit	src/imembase.c	/^static void imcache_quit(void)$/;"	f	file:
imcache_release	src/imembase.c	/^static void imcache_release(struct IMEMCACHE *cache)$/;"	f	file:
imcache_set_magic	src/imembase.c	/^static void imcache_set_magic(void *ptr)$/;"	f	file:
imcache_slab_create	src/imembase.c	/^struct IMEMSLAB *imcache_slab_create(struct IMCACHE_LIST3 *mlist, long *cnt)$/;"	f	file:
imcache_slab_destry	src/imembase.c	/^void imcache_slab_destry(struct IMCACHE_LIST3 *mlist, struct IMEMSLAB *slab)$/;"	f	file:
imemnode_t	inc/imembase.h	/^typedef struct IMEMNODE imemnode_t;$/;"	t	typeref:struct:IMEMNODE
imgfp_alloc_page	src/imembase.c	/^void* imgfp_alloc_page(struct IMEMGFP *gfp)$/;"	f
imgfp_free_page	src/imembase.c	/^void imgfp_free_page(struct IMEMGFP *gfp, void *ptr)$/;"	f
imlog_destroy	src/imembase.c	/^void imlog_destroy(void)$/;"	f
imlog_directory	src/imembase.c	/^static char imlog_directory[] = ".\/";$/;"	v	file:
imlog_inited	src/imembase.c	/^static int imlog_inited = 0;$/;"	v	file:
imlog_mask	src/imembase.c	/^static int imlog_mask = 0;$/;"	v	file:
imlog_mode	src/imembase.c	/^static int imlog_mode = 0;$/;"	v	file:
imlog_mutex	src/imembase.c	/^static imutex_t imlog_mutex = NULL;$/;"	v	file:
imlog_setmask	src/imembase.c	/^void imlog_setmask(int logmask)$/;"	f
imlog_setup	src/imembase.c	/^void imlog_setup(imlogging_t handler)$/;"	f
imlog_setup_debug	src/imembase.c	/^void imlog_setup_debug(int logmode)$/;"	f
imlog_write	src/imembase.c	/^void imlog_write(int level, const char *fmt, ...)$/;"	f
imlog_writer	src/imembase.c	/^static imlogging_t imlog_writer = NULL;$/;"	v	file:
imlogging_t	inc/imembase.h	/^typedef void (*imlogging_t)(const char *text);$/;"	t
imlogging_text_handler	src/imembase.c	/^static void imlogging_text_handler(const char *text) $/;"	f	file:
imnode_create	src/imembase.c	/^imemnode_t *imnode_create(int nodesize, int grow_limit)$/;"	f
imnode_data	src/imembase.c	/^void*imnode_data(struct IMEMNODE *mnode, long index)$/;"	f
imnode_del	src/imembase.c	/^void imnode_del(struct IMEMNODE *mnode, long index)$/;"	f
imnode_delete	src/imembase.c	/^void imnode_delete(imemnode_t *mnode)$/;"	f
imnode_destroy	src/imembase.c	/^void imnode_destroy(struct IMEMNODE *mnode)$/;"	f
imnode_grow	src/imembase.c	/^static long imnode_grow(struct IMEMNODE *mnode)$/;"	f	file:
imnode_head	src/imembase.c	/^long imnode_head(struct IMEMNODE *mnode)$/;"	f
imnode_init	src/imembase.c	/^void imnode_init(struct IMEMNODE *mn, long nodesize, struct IALLOCATOR *ac)$/;"	f
imnode_mem_add	src/imembase.c	/^static int imnode_mem_add(struct IMEMNODE *mnode, int node_count, void **mem)$/;"	f	file:
imnode_new	src/imembase.c	/^long imnode_new(struct IMEMNODE *mnode)$/;"	f
imnode_next	src/imembase.c	/^long imnode_next(struct IMEMNODE *mnode, long index)$/;"	f
imnode_node_resize	src/imembase.c	/^static int imnode_node_resize(struct IMEMNODE *mnode, long size)$/;"	f	file:
impage_alloc	src/imembase.c	/^void *impage_alloc(void)$/;"	f
impage_destroy	src/imembase.c	/^void impage_destroy(void)$/;"	f
impage_free	src/imembase.c	/^void impage_free(void *ptr)$/;"	f
impage_in	src/imembase.c	/^static unsigned long impage_in = 0;$/;"	v	file:
impage_info	src/imembase.c	/^void impage_info(long *pageshift, long *pagesize)$/;"	f
impage_inited	src/imembase.c	/^static int impage_inited = 0;$/;"	v	file:
impage_inuse	src/imembase.c	/^static unsigned long impage_inuse = 0;$/;"	v	file:
impage_mutex	src/imembase.c	/^static imutex_t impage_mutex = NULL;$/;"	v	file:
impage_node	src/imembase.c	/^static struct IMEMNODE impage_node;$/;"	v	typeref:struct:IMEMNODE	file:
impage_out	src/imembase.c	/^static unsigned long impage_out = 0;$/;"	v	file:
impage_psize	src/imembase.c	/^unsigned long impage_psize = 0;$/;"	v
impage_setup	src/imembase.c	/^void impage_setup(long pageshift)$/;"	f
impage_shift	src/imembase.c	/^unsigned long impage_shift = 12;$/;"	v
impage_state	src/imembase.c	/^void impage_state(long *inuse, long *in, long *out)$/;"	f
imslab_alloc	src/imembase.c	/^void *imslab_alloc(struct IMEMSLAB *slab)$/;"	f
imslab_free	src/imembase.c	/^void imslab_free(struct IMEMSLAB *slab, void *ptr)$/;"	f
imslab_init	src/imembase.c	/^long imslab_init(struct IMEMSLAB *slab, void*mem, long len, int dlen, int off)$/;"	f
imslabset_del	src/imembase.c	/^void imslabset_del(struct IMEMSLAB *slab)$/;"	f
imslabset_destroy	src/imembase.c	/^void imslabset_destroy(void)$/;"	f
imslabset_init	src/imembase.c	/^void imslabset_init(void)$/;"	f
imslabset_inited	src/imembase.c	/^static int imslabset_inited = 0;$/;"	v	file:
imslabset_mutex	src/imembase.c	/^static imutex_t imslabset_mutex = NULL;$/;"	v	file:
imslabset_new	src/imembase.c	/^struct IMEMSLAB *imslabset_new(void)$/;"	f
imslabset_node	src/imembase.c	/^static struct IMEMNODE imslabset_node;$/;"	v	typeref:struct:IMEMNODE	file:
imspin_node	src/imembase.c	/^static struct IMEMNODE imspin_node;$/;"	v	typeref:struct:IMEMNODE	file:
imutex_cleanup	src/imembase.c	/^void imutex_cleanup(void)$/;"	f
imutex_core	src/imembase.c	/^static long*imutex_core = NULL;$/;"	v	file:
imutex_currentcpu	src/imembase.c	/^int imutex_currentcpu(void)$/;"	f
imutex_default_destroy	src/imembase.c	/^static void imutex_default_destroy(void *mutex) {$/;"	f	file:
imutex_default_init	src/imembase.c	/^static int imutex_default_init(void *mutex) {$/;"	f	file:
imutex_default_lock	src/imembase.c	/^static void imutex_default_lock(void *mutex) {$/;"	f	file:
imutex_default_setup	src/imembase.c	/^void imutex_default_setup(void)$/;"	f
imutex_default_unlock	src/imembase.c	/^static void imutex_default_unlock(void *mutex) {$/;"	f	file:
imutex_del	src/imembase.c	/^void imutex_del(imutex_t mutex)$/;"	f
imutex_hook	src/imembase.c	/^static struct IMUTEXHOOK imutex_hook;$/;"	v	typeref:struct:IMUTEXHOOK	file:
imutex_inited	src/imembase.c	/^static long imutex_inited = 0;$/;"	v	file:
imutex_lock	src/imembase.c	/^void imutex_lock(imutex_t mutex)$/;"	f
imutex_master	src/imembase.c	/^static long imutex_master = -1;$/;"	v	file:
imutex_neglect	src/imembase.c	/^void imutex_neglect(int isneglect)$/;"	f
imutex_neglected	src/imembase.c	/^static long imutex_neglected = 0;$/;"	v	file:
imutex_new	src/imembase.c	/^imutex_t imutex_new(void)$/;"	f
imutex_node	src/imembase.c	/^static struct IMEMNODE imutex_node;$/;"	v	typeref:struct:IMEMNODE	file:
imutex_setup	src/imembase.c	/^void imutex_setup(struct IMUTEXHOOK *hook)$/;"	f
imutex_t	inc/imembase.h	/^typedef void* imutex_t;$/;"	t
imutex_unlock	src/imembase.c	/^void imutex_unlock(imutex_t mutex)$/;"	f
imutex_win32	src/imembase.c	/^static struct IMUTEXHOOK imutex_win32 = {$/;"	v	typeref:struct:IMUTEXHOOK	file:
imv_free	src/imembase.c	/^void imv_free(struct IALLOCATOR *allocator, void *ptr)$/;"	f
imv_free_ptr	src/imembase.c	/^void (*imv_free_ptr)(void *mem) = 0;$/;"	v
imv_malloc	src/imembase.c	/^void* imv_malloc(struct IALLOCATOR *allocator, unsigned long size)$/;"	f
imv_malloc_ptr	src/imembase.c	/^void *(*imv_malloc_ptr)(unsigned long size) = 0;$/;"	v
in_reply_to	inc/gmime_smtp.h	/^	char *in_reply_to;$/;"	m	struct:_envelope
index	inc/http_IM_parser.h	/^    int     index;	\/\/È£û‰ø°Á¶ªÁ∫øÊñá‰ª∂‰º†ËæìÊòØÁöÑÂàÜÂùó‰ø°ÊÅØÁöÑÁ¥¢ÂºïÂè∑$/;"	m	struct:feition_data_post
index	inc/http_parser.h	/^  unsigned int index : 8;        \/* index into current matcher *\/$/;"	m	struct:http_parser
index	inc/imembase.h	/^	long index;$/;"	m	struct:IMEMCACHE
inf_log	inc/plog.h	/^zlog_category_t* inf_log;$/;"	v
init_IM_list	src/read_IM_config.c	/^_IM_HOST_URL_REG  *init_IM_list()$/;"	f
init_att_nodelist	src/webmail_attach.c	/^struct att_node *init_att_nodelist()$/;"	f
init_lock_for_sync	src/session_buf.c	/^int init_lock_for_sync(int iringbuffer_ID, int iringbuffer_qlength)\/\/initializing the semaphore lock_object$/;"	f
init_name_nodelist	src/gmime_smtp.c	/^struct namenode *init_name_nodelist()$/;"	f
init_slock_for_sync	src/session_buf.c	/^int init_slock_for_sync(int iringbuffer_ID, int iringbuffer_qlength)\/\/initializing the semaphore lock_object$/;"	f
init_testhttp_string_and_len	src/parsertrace.c	/^testhttp_string_and_len *init_testhttp_string_and_len()$/;"	f
init_webmail_string_and_len	src/webmail_parser.c	/^webmail_string_and_len *init_webmail_string_and_len()$/;"	f
inline	inc/imembase.h	46;"	d
inline	inc/imembase.h	48;"	d
inline	inc/imembase.h	51;"	d
inline	inc/imembase.h	53;"	d
insert_hash	src/beap_hash.c	/^void insert_hash(hash_table * tbl, hash_bucket * elem, int len)$/;"	f
int16_t	inc/http_parser.h	/^typedef __int16 int16_t;$/;"	t
int32_t	inc/http_parser.h	/^typedef __int32 int32_t;$/;"	t
int64_t	inc/http_parser.h	/^typedef __int64 int64_t;$/;"	t
int8_t	inc/http_parser.h	/^typedef __int8 int8_t;$/;"	t
int_ntoa	inc/gmime_smtp.h	124;"	d
int_ntoa	inc/update_json.h	67;"	d
int_to_ipstr	src/ftp_extract.c	/^int_to_ipstr (int src, char *str)$/;"	f
int_to_ipstr	src/update_json.c	/^static int int_to_ipstr(int src, char *str)$/;"	f	file:
inuse	inc/imembase.h	/^	long inuse;$/;"	m	struct:IMEMSLAB
ip_dst	inc/ring_buffer.h	/^	uint32_t ip_dst;	\/\/ÁõÆÁöÑIP$/;"	m	struct:five_attr
ip_dst	inc/ring_buffer.h	/^	uint32_t ip_dst;$/;"	m	struct:sfive_attr
ip_dst	inc/ring_buffer.h	/^        uint32_t ip_dst;    $/;"	m	struct:four_tuple
ip_src	inc/ring_buffer.h	/^	uint32_t ip_src;	\/\/ÂéüIP$/;"	m	struct:five_attr
ip_src	inc/ring_buffer.h	/^	uint32_t ip_src;$/;"	m	struct:sfive_attr
ip_src	inc/ring_buffer.h	/^        uint32_t ip_src;$/;"	m	struct:four_tuple
iqueue_add	inc/imembase.h	110;"	d
iqueue_add_tail	inc/imembase.h	111;"	d
iqueue_del	inc/imembase.h	112;"	d
iqueue_del_init	inc/imembase.h	113;"	d
iqueue_entry	inc/imembase.h	109;"	d
iqueue_foreach	inc/imembase.h	121;"	d
iqueue_head	inc/imembase.h	/^typedef struct IQUEUEHEAD iqueue_head;$/;"	t	typeref:struct:IQUEUEHEAD
iqueue_init	inc/imembase.h	108;"	d
iqueue_is_empty	inc/imembase.h	114;"	d
irb_buffer_end_index	inc/ring_buffer.h	/^	int irb_buffer_end_index;$/;"	m	struct:ring_buffer_holder
irb_buffer_end_index	inc/ring_buffer.h	/^	int irb_buffer_end_index;$/;"	m	struct:session_buffer_holder
irb_head_index	inc/ring_buffer.h	/^	int irb_head_index;$/;"	m	struct:ring_buffer_holder
irb_head_index	inc/ring_buffer.h	/^	int irb_head_index;$/;"	m	struct:session_buffer_holder
irb_node_data_size	inc/ring_buffer.h	/^	int irb_node_data_size;$/;"	m	struct:ring_buffer_node_tag
irb_qlength	inc/ring_buffer.h	/^	int irb_qlength;$/;"	m	struct:ring_buffer_holder
irb_qlength	inc/ring_buffer.h	/^	int irb_qlength;$/;"	m	struct:session_buffer_holder
irb_tail_index	inc/ring_buffer.h	/^	int irb_tail_index;$/;"	m	struct:ring_buffer_holder
irb_tail_index	inc/ring_buffer.h	/^	int irb_tail_index;$/;"	m	struct:session_buffer_holder
isEncrypted	inc/update_json.h	/^	char isEncrypted[16];  \/\/file is encrypted  is true otherwise false$/;"	m	struct:tika_message
is_not_null	src/extractmain.c	/^int is_not_null(SESSION_BUFFER_NODE *pronode)$/;"	f
isgbk	src/ftp_extract.c	/^isgbk (char *s, size_t ns)$/;"	f
ishttpsource	src/srv_echo.c	/^ishttpsource (char *url)$/;"	f
issuccess	inc/update_json.h	/^	char issuccess[16];    \/\/tika parse success is true otherwise false  $/;"	m	struct:tika_message
itoa	src/webmail_parser.c	/^char *itoa(int num,char*str,int radix)$/;"	f
iv_create	src/imembase.c	/^ivector_t *iv_create(void)$/;"	f
iv_delete	src/imembase.c	/^void iv_delete(ivector_t *vec)$/;"	f
iv_destroy	src/imembase.c	/^void iv_destroy(struct IVECTOR *v)$/;"	f
iv_init	src/imembase.c	/^void iv_init(struct IVECTOR *v, struct IALLOCATOR *allocator)$/;"	f
iv_resize	src/imembase.c	/^int iv_resize(struct IVECTOR *v, unsigned long newsize)$/;"	f
ivector_t	inc/imembase.h	/^typedef struct IVECTOR ivector_t;$/;"	t	typeref:struct:IVECTOR
jdmail	src/webmail_parser.c	/^    int jdmail(char* host_ori_ref)$/;"	f
jdmail_att	src/webmail_parser.c	/^int jdmail_att(HttpSession* dlp_http, dlp_webmail_info *webmail, char* host_ori_ref, char**webmailjson, http_sbuffputdata sbuff_putdata, const int iringbuffer_ID)$/;"	f
jdmail_type	src/webmail_parser.c	/^    int jdmail_type(char*host_ori_ref)$/;"	f
jvm	src/fileparse.c	/^JavaVM *jvm;$/;"	v
key	inc/beap_hash.h	/^	struct http_IM_tuple5	key;	\/\/??‘™??$/;"	m	struct:_http_IM_session	typeref:struct:_http_IM_session::http_IM_tuple5
key	inc/beap_hash.h	/^     struct tuple4  key;$/;"	m	struct:https	typeref:struct:https::tuple4
key	inc/beap_hash.h	/^    struct http_feition_tuple2      key;$/;"	m	struct:_http_feition_session	typeref:struct:_http_feition_session::http_feition_tuple2
key	inc/beap_hash.h	/^    struct tuple5  key;$/;"	m	struct:__anon3	typeref:struct:__anon3::tuple5
key	inc/beap_hash.h	/^    void *		key;$/;"	m	struct:stru_hash_bucket
key	inc/smtpfunc.h	/^	struct tuple4 key;                         \/* ‰ºöËØùid *\/$/;"	m	struct:SmtpSession	typeref:struct:SmtpSession::tuple4
key	inc/smtpfunc.h	/^	struct tuple4 key;                   \/* ‰ºöËØùid *\/$/;"	m	struct:SMTPID	typeref:struct:SMTPID::tuple4
last_mark	src/update_json.c	/^int last_mark (char *str, char mark)$/;"	f
len	inc/beap_hash.h	/^     int                  len;$/;"	m	struct:https
len	inc/http_parser.h	/^	int len;$/;"	m	struct:DLP_HTTP_PARSER_STRING_AND_STRLEN
len	inc/http_parser.h	/^    uint16_t len;               \/* Length of run in buffer *\/$/;"	m	struct:http_parser_url::__anon6
len	inc/webmail_parser.h	/^	int len;$/;"	m	struct:DLP_WEBMAIL_PARSER_STRING_AND_STRLEN
length	inc/http_parser.h	/^	int length;$/;"	m	struct:dlp_http_file_node
length	inc/imembase.h	/^	unsigned long length;      $/;"	m	struct:IVECTOR
limit	inc/imembase.h	/^	int limit;$/;"	m	struct:IMCACHE_ARRAY
limit	inc/imembase.h	/^	unsigned long limit;$/;"	m	struct:IMEMCACHE
list	inc/imembase.h	/^	struct IMCACHE_LIST3 list;$/;"	m	struct:IMEMCACHE	typeref:struct:IMEMCACHE::IMCACHE_LIST3
list_close	inc/imembase.h	/^	long list_close;                \/* the entry of close-list *\/$/;"	m	struct:IMEMNODE
list_lock	inc/imembase.h	/^	imutex_t list_lock;$/;"	m	struct:IMCACHE_LIST3
list_open	inc/imembase.h	/^	long list_open;                 \/* the entry of open-list  *\/$/;"	m	struct:IMEMNODE
lock	inc/imembase.h	/^	imutex_t lock;$/;"	m	struct:IMCACHE_ARRAY
lock	inc/imembase.h	/^	imutex_t lock;$/;"	m	struct:IMEMCACHE
lockqq	src/webmail_parser.c	/^pthread_mutex_t lockqq=PTHREAD_MUTEX_INITIALIZER;$/;"	v
locksohu	src/webmail_parser.c	/^pthread_mutex_t locksohu=PTHREAD_MUTEX_INITIALIZER;$/;"	v
log_printf	src/plog.c	/^void log_printf(unsigned int level, char *fmt, ...){$/;"	f
mail	inc/webmail_parser.h	/^typedef struct mail{$/;"	s
mail_139	src/webmail_parser.c	/^int mail_139(webmail_string_and_len *StoCK,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
mail_189	src/webmail_parser.c	/^int mail_189(webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
mail_body	inc/smtpfunc.h	/^    mail_body_attribute_t *mail_body;          \/* ‰ø°‰Ωì‰ø°ÊÅØÈìæË°® *\/$/;"	m	struct:SmtpSession
mail_body	inc/smtpfunc.h	/^    mail_body_attribute_t *mail_body;          \/* ‰ø°‰Ωì‰ø°ÊÅØÈìæË°® *\/$/;"	m	struct:smtp_reset
mail_body	inc/smtpfunc.h	/^    mail_body_attribute_t *mail_body;    \/* ‰ø°‰Ωì‰ø°ÊÅØÈìæË°® *\/$/;"	m	struct:SMTPID
mail_body_attribute	inc/smtpfunc.h	/^typedef struct mail_body_attribute$/;"	s
mail_body_attribute_t	inc/smtpfunc.h	/^} mail_body_attribute_t;$/;"	t	typeref:struct:mail_body_attribute
mail_body_dir	inc/smtpfunc.h	/^    char *mail_body_dir;                       \/* ‰ø°‰ΩìÂ≠òÊîæË∑ØÂæÑ *\/$/;"	m	struct:SmtpSession
mail_body_name	inc/smtpfunc.h	/^    char *mail_body_name;                      \/* Êà™ÂèñÁöÑ‰ø°‰ΩìÂêçÁß∞ *\/$/;"	m	struct:SmtpSession
mail_content	inc/smtpfunc.h	/^	char *mail_content;                \/* Ê≠£ÊñáÂÜÖÂÆπË∑ØÂæÑ *\/$/;"	m	struct:mail_body_attribute
mail_end	inc/webmail_parser.h	/^	   mail_end,\/*ÊèêÂèñÂ§ßÈôÑ‰ª∂ÁªìÊùüÁöÑÊ†áÂøóÔºå‰πüËÆ∏Ë¶ÅÁîüÊàêjansson‰∏≤*\/$/;"	e	enum:mail::__anon8
mail_from	inc/smtpfunc.h	/^    char *mail_from;                           \/* ‰ø°Â∞ÅÂèëÈÄÅ‰∫∫Âú∞ÂùÄ *\/$/;"	m	struct:SmtpSession
mail_from	inc/smtpfunc.h	/^    char *mail_from;                           \/* ‰ø°Â∞ÅÂèëÈÄÅ‰∫∫Âú∞ÂùÄ *\/$/;"	m	struct:smtp_reset
mail_from	inc/smtpfunc.h	/^    char *mail_from;                     \/* ‰ø°Â∞ÅÂèë‰ª∂‰∫∫Âú∞ÂùÄ *\/$/;"	m	struct:SMTPID
mail_from	inc/smtpfunc.h	/^    char *mail_from;                   \/* ‰ø°‰ΩìÂèëÈÄÅ‰∫∫Âú∞ÂùÄ *\/$/;"	m	struct:mail_body_attribute
mail_id	inc/smtpfunc.h	/^	char *mail_id;                     \/* ÈÇÆ‰ª∂id, ÂèØËÉΩ‰∏∫Á©∫ *\/$/;"	m	struct:mail_body_attribute
mail_ing	inc/webmail_parser.h	/^	   mail_ing,\/*Â§ßÈôÑ‰ª∂ËøòÊ≤°ÁªìÊùüÔºå‰∏çÈúÄË¶ÅÁîüÊàêjansson‰∏≤*\/$/;"	e	enum:mail::__anon8
mail_subject	inc/smtpfunc.h	/^	char *mail_subject;                \/* ‰∏ªÈ¢ò *\/$/;"	m	struct:mail_body_attribute
mail_time	inc/smtpfunc.h	/^	char *mail_time;                   \/* ÈÇÆ‰ª∂ÂèëÈÄÅÁöÑÊó∂Èó¥Êà≥ *\/$/;"	m	struct:mail_body_attribute
match_IM_url	src/http_IM_parser.c	/^int match_IM_url(char *src, const char *pattern)$/;"	f
max_cfilesize	inc/type_define.h	/^unsigned int max_cfilesize = 104857600;$/;"	v
mch	src/webmail_parser.c	/^int mch( webmail_string_and_len ** var, webmail_string_and_len ** Sto,const char *pattern)$/;"	f
mch_att	src/webmail_parser.c	/^int mch_att(webmail_string_and_len ** var,dlp_webmail_info *webmail)$/;"	f
mch_att_139	src/webmail_parser.c	/^int mch_att_139(webmail_string_and_len **var, webmail_string_and_len **sto, webmail_string_and_len *StoBY, dlp_webmail_info *webmail , char **filename)$/;"	f
mch_att_139_multi_session	src/webmail_parser.c	/^int mch_att_139_multi_session( webmail_string_and_len *StoMB , webmail_string_and_len *StoBY , dlp_webmail_info *webmail)$/;"	f
mch_sundy_research	src/webmail_parser.c	/^int mch_sundy_research(webmail_string_and_len * var, webmail_string_and_len ** Sto1, int Rloca, const char pattern1[PATTERN_LENGTH])$/;"	f
mch_t	src/webmail_parser.c	/^int mch_t( webmail_string_and_len ** var, char Sto[MAX_REGEX_RESULT_LEN],const char *pattern)$/;"	f
mdata	inc/imembase.h	/^	void**mdata;                    \/* node data array         *\/$/;"	m	struct:IMEMNODE
mem_count	inc/imembase.h	/^	long mem_count;                 \/* number of mem-pages     *\/$/;"	m	struct:IMEMNODE
mem_max	inc/imembase.h	/^	long mem_max;                   \/* max num of memory pages *\/$/;"	m	struct:IMEMNODE
membase	inc/imembase.h	/^	void*membase;$/;"	m	struct:IMEMSLAB
memsize	inc/imembase.h	/^	long memsize;$/;"	m	struct:IMEMSLAB
message_id	inc/gmime_smtp.h	/^	char *message_id;$/;"	m	struct:_envelope
method	inc/http_parser.h	/^  unsigned int method : 8;       \/* requests only *\/$/;"	m	struct:http_parser
method	src/srv_echo.c	/^  char method[MAX_METHOD_SIZE];$/;"	m	struct:http_info	file:
method_strings	src/http_parser.c	/^static const char *method_strings[] =$/;"	v	file:
mmem	inc/imembase.h	/^	char **mmem;                    \/* mem-pages array         *\/$/;"	m	struct:IMEMNODE
mmode	inc/imembase.h	/^	long *mmode;                    \/* node mode array         *\/$/;"	m	struct:IMEMNODE
mnext	inc/imembase.h	/^	long *mnext;                    \/* next node array         *\/$/;"	m	struct:IMEMNODE
mnode	inc/imembase.h	/^	long *mnode;                    \/* node info array         *\/$/;"	m	struct:IMEMNODE
mprev	inc/imembase.h	/^	long *mprev;                    \/* prev node array         *\/$/;"	m	struct:IMEMNODE
msec2dhmsm	src/pfutils.c	/^char *msec2dhmsm(u_int64_t msec, char *buf, u_int buf_len)$/;"	f
mspin_size	inc/imembase.h	/^	int mspin_size;$/;"	m	struct:IMUTEXHOOK
mtype	inc/extractmain.h	/^  long mtype;			\/* message type, must be > 0 *\/$/;"	m	struct:nids_pm_msg
mutex	inc/ring_buffer.h	/^	pthread_mutex_t mutex;$/;"	m	struct:ring_buffer_holder
mutex	inc/ring_buffer.h	/^	pthread_mutex_t mutex;$/;"	m	struct:session_buffer_holder
mutex_destroy	inc/imembase.h	/^	void (*mutex_destroy)(void *mutex);$/;"	m	struct:IMUTEXHOOK
mutex_init	inc/imembase.h	/^	int (*mutex_init)(void *mutex);$/;"	m	struct:IMUTEXHOOK
mutex_lock	inc/imembase.h	/^	void (*mutex_lock)(void *mutex);$/;"	m	struct:IMUTEXHOOK
mutex_size	inc/imembase.h	/^	int mutex_size;$/;"	m	struct:IMUTEXHOOK
mutex_unlock	inc/imembase.h	/^	void (*mutex_unlock)(void *mutex);$/;"	m	struct:IMUTEXHOOK
mysmtp	src/gmime_smtp.c	/^int mysmtp (char *emlpath, char **projson)$/;"	f
name	inc/extractmain.h	/^   char name[80]; \/* Â≠òÂÇ®json‰∏≤ÁöÑÊñá‰ª∂ÂêçÁß∞ *\/$/;"	m	struct:path_msg
name	inc/imembase.h	/^	char name[IMCACHE_NAMESIZE + 1];$/;"	m	struct:IMEMCACHE
name	src/http_parser.c	/^  const char *name;$/;"	m	struct:__anon9	file:
namenode	inc/gmime_smtp.h	/^struct namenode $/;"	s
new_file	inc/http_parser.h	/^	FILE* new_file;$/;"	m	struct:dlp_http_post_head
new_name	inc/http_parser.h	/^        char  new_name[128];$/;"	m	struct:dlp_http_post_head
next	inc/beap_hash.h	/^	struct  EML_TO  *next;$/;"	m	struct:EML_TO	typeref:struct:EML_TO::EML_TO
next	inc/beap_hash.h	/^	struct SMTP_EML	*next;$/;"	m	struct:SMTP_EML	typeref:struct:SMTP_EML::SMTP_EML
next	inc/gmime_smtp.h	/^	struct _bodystruct *next;$/;"	m	struct:_bodystruct	typeref:struct:_bodystruct::_bodystruct
next	inc/gmime_smtp.h	/^	struct namenode* next;$/;"	m	struct:namenode	typeref:struct:namenode::namenode
next	inc/gmime_smtp.h	/^   struct smtp_data *next;$/;"	m	struct:smtp_data	typeref:struct:smtp_data::smtp_data
next	inc/http_parser.h	/^	struct dlp_http_file_node *next;$/;"	m	struct:dlp_http_file_node	typeref:struct:dlp_http_file_node::dlp_http_file_node
next	inc/imembase.h	/^	struct IQUEUEHEAD *next, *prev;$/;"	m	struct:IQUEUEHEAD	typeref:struct:IQUEUEHEAD::IQUEUEHEAD
next	inc/read_IM_config.h	/^		struct _IM_HOST_URL_REG *next;$/;"	m	struct:_IM_HOST_URL_REG	typeref:struct:_IM_HOST_URL_REG::_IM_HOST_URL_REG
next	inc/smtpfunc.h	/^    struct SMTPID *next;$/;"	m	struct:SMTPID	typeref:struct:SMTPID::SMTPID
next	inc/smtpfunc.h	/^    struct SmtpSession *next;$/;"	m	struct:SmtpSession	typeref:struct:SmtpSession::SmtpSession
next	inc/smtpfunc.h	/^    struct mail_body_attribute *next;$/;"	m	struct:mail_body_attribute	typeref:struct:mail_body_attribute::mail_body_attribute
next	inc/smtpfunc.h	/^    struct smtp_reset *next;                   \/* RSETÁöÑ‰∏Ä‰∏ã‰∏™mail‰ø°ÊÅØ *\/$/;"	m	struct:smtp_reset	typeref:struct:smtp_reset::smtp_reset
next	inc/smtpfunc.h	/^   struct rcpt_to *next;                   \/* ÊåáÂêë‰∏ã‰∏Ä‰∏™Êî∂‰ª∂‰∫∫ÈÇÆÁÆ±Âú∞ÂùÄ *\/$/;"	m	struct:rcpt_to	typeref:struct:rcpt_to::rcpt_to
next	inc/smtpfunc.h	/^   struct smtp_accessory *next;             \/* ÊåáÂêë‰∏ã‰∏Ä‰∏™ÈôÑ‰ª∂ *\/$/;"	m	struct:smtp_accessory	typeref:struct:smtp_accessory::smtp_accessory
next	inc/webmail_attach.h	/^	struct att_node *next;\/*ÁªìÁÇπÊåáÈíà*\/$/;"	m	struct:att_node	typeref:struct:att_node::att_node
next_hash	inc/beap_hash.h	/^struct stru_hash_bucket * next_hash;$/;"	m	struct:__anon1	typeref:struct:__anon1::stru_hash_bucket
nexthdr	src/pfutils.c	/^	u_int8_t nexthdr;$/;"	m	struct:compact_ipv6_hdr	file:
nids_pm_msg	inc/extractmain.h	/^struct nids_pm_msg $/;"	s
no_jansson	inc/webmail_parser.h	/^	   no_jansson,\/*‰∏çÈúÄË¶ÅÁîüÊàêjansson‰∏≤*\/$/;"	e	enum:mail::__anon8
node_free	inc/imembase.h	/^	long node_free;                 \/* number of free nodes    *\/$/;"	m	struct:IMEMNODE
node_max	inc/imembase.h	/^	long node_max;                  \/* number of all nodes     *\/$/;"	m	struct:IMEMNODE
node_shift	inc/imembase.h	/^	int node_shift;                 \/* node data size shift    *\/$/;"	m	struct:IMEMNODE
node_size	inc/imembase.h	/^	int node_size;                  \/* node data fixed size    *\/$/;"	m	struct:IMEMNODE
normal_url_char	src/http_parser.c	/^static const uint8_t normal_url_char[32] = {$/;"	v	file:
now_rcpt_count	inc/smtpfunc.h	/^    int now_rcpt_count;                        \/* ÂΩìÂâçÊé•Êî∂‰∫∫‰∏™Êï∞ *\/$/;"	m	struct:SmtpSession
nr_entries	inc/beap_hash.h	/^    int 		nr_entries; \/\/??¬º??$/;"	m	struct:__anon2
nread	inc/http_parser.h	/^  uint32_t nread;          \/* # bytes read in various scenarios *\/$/;"	m	struct:http_parser
ntc_log	inc/plog.h	/^zlog_category_t* ntc_log;$/;"	v
null	src/ftp_extract.c	44;"	d	file:
num	inc/imembase.h	/^	unsigned long num;	$/;"	m	struct:IMEMCACHE
numcapture	src/smtpfunc.c	/^int numcapture (char *str, int *num)$/;"	f
obj_size	inc/imembase.h	/^	unsigned long obj_size;$/;"	m	struct:IMCACHE_LIST3
obj_size	inc/imembase.h	/^	unsigned long obj_size;$/;"	m	struct:IMEMCACHE
off	inc/http_parser.h	/^    uint16_t off;               \/* Offset into buffer in which field starts *\/$/;"	m	struct:http_parser_url::__anon6
old_file	inc/beap_hash.h	/^     FILE*             old_file;$/;"	m	struct:https
old_file	inc/ring_buffer.h	/^	FILE *old_file;$/;"	m	struct:session_buffer_node_tag
old_name	inc/beap_hash.h	/^     char               old_name[128];$/;"	m	struct:https
on_body	inc/http_parser.h	/^  http_data_cb on_body;$/;"	m	struct:http_parser_settings
on_body	src/parsertrace.c	/^int on_body(http_parser* parser, const char* at, size_t length) {$/;"	f
on_header_field	inc/http_parser.h	/^  http_data_cb on_header_field;$/;"	m	struct:http_parser_settings
on_header_field	src/parsertrace.c	/^int on_header_field(http_parser* parser, const char* at, size_t length) {$/;"	f
on_header_value	inc/http_parser.h	/^  http_data_cb on_header_value;$/;"	m	struct:http_parser_settings
on_header_value	src/parsertrace.c	/^int on_header_value(http_parser* parser, const char* at, size_t length) {$/;"	f
on_headers_complete	inc/http_parser.h	/^  http_cb      on_headers_complete;$/;"	m	struct:http_parser_settings
on_headers_complete	src/parsertrace.c	/^int on_headers_complete(http_parser* _) {$/;"	f
on_message_begin	inc/http_parser.h	/^  http_cb      on_message_begin;$/;"	m	struct:http_parser_settings
on_message_begin	src/parsertrace.c	/^int on_message_begin(http_parser* _) {$/;"	f
on_message_complete	inc/http_parser.h	/^  http_cb      on_message_complete;$/;"	m	struct:http_parser_settings
on_message_complete	src/parsertrace.c	/^int on_message_complete(http_parser* _) {$/;"	f
on_status	inc/http_parser.h	/^  http_data_cb on_status;$/;"	m	struct:http_parser_settings
on_url	inc/http_parser.h	/^  http_data_cb on_url;$/;"	m	struct:http_parser_settings
on_url	src/parsertrace.c	/^int on_url(http_parser*parser, const char* at, size_t length) {$/;"	f
orgname	inc/ring_buffer.h	/^	char orgname[128];	\/\/ÁΩëÁªú‰∏ä‰º†ËæìÁöÑÂéüÂßãÊñá‰ª∂Âêç$/;"	m	struct:session_buffer_node_tag
origin	inc/http_parser.h	/^	char origin[HTTP_FILE_ORIGIN_MAX];$/;"	m	struct:dlp_http_post_head
outdata	src/extractmain.c	/^int outdata;$/;"	v
p_eml	inc/beap_hash.h	/^	char			*p_eml;            \/\/ÈÇÆ‰ª∂Êï∞ÊçÆÂåÖ$/;"	m	struct:SMTP_EML
p_to	inc/beap_hash.h	/^    char    *p_to;$/;"	m	struct:EML_TO
page_size	inc/imembase.h	/^	unsigned long page_size;$/;"	m	struct:IMCACHE_LIST3
page_size	inc/imembase.h	/^	unsigned long page_size;$/;"	m	struct:IMEMCACHE
page_supply	inc/imembase.h	/^	struct IMEMGFP page_supply;$/;"	m	struct:IMEMCACHE	typeref:struct:IMEMCACHE::IMEMGFP
pages_hiwater	inc/imembase.h	/^	unsigned long pages_hiwater;$/;"	m	struct:IMEMCACHE
pages_in	inc/imembase.h	/^	unsigned long pages_in;$/;"	m	struct:IMCACHE_LIST3
pages_in	inc/imembase.h	/^	unsigned long pages_in;$/;"	m	struct:IMEMGFP
pages_inuse	inc/imembase.h	/^	unsigned long pages_inuse;$/;"	m	struct:IMEMCACHE
pages_inuse	inc/imembase.h	/^	unsigned long pages_inuse;$/;"	m	struct:IMEMGFP
pages_out	inc/imembase.h	/^	unsigned long pages_out;$/;"	m	struct:IMCACHE_LIST3
pages_out	inc/imembase.h	/^	unsigned long pages_out;$/;"	m	struct:IMEMGFP
pagesize	inc/imembase.h	/^	unsigned long pagesize;$/;"	m	struct:IMEMGFP
params	inc/gmime_smtp.h	/^		GMimeParam *params;$/;"	m	struct:_bodystruct::__anon4
params	inc/gmime_smtp.h	/^		GMimeParam *params;$/;"	m	struct:_bodystruct::__anon5
parse_message	src/gmime_smtp.c	/^GMimeMessage *parse_message (int fd)$/;"	f
parse_url_char	src/http_parser.c	/^parse_url_char(enum state s, const char ch)$/;"	f	file:
parser_baidu_pan_data_msg	src/http_netdisk.c	/^int parser_baidu_pan_data_msg(char *uuid, int post_num, int flag, dlp_http_post_head *http_session)$/;"	f
parser_feition_init	src/http_IM_parser.c	/^int parser_feition_init(struct IM_file_inf *f_inf, dlp_http_post_head *http_session)$/;"	f
paser_blog	src/http_IM_parser.c	/^char *paser_blog(char *src, const char *pattern)$/;"	f
path_msg	inc/extractmain.h	/^struct path_msg$/;"	s
payload_len	src/pfutils.c	/^	u_int16_t payload_len;$/;"	m	struct:compact_ipv6_hdr	file:
pdata_buffer	inc/ring_buffer.h	/^	void *pdata_buffer;$/;"	m	struct:ring_buffer_node_tag
pkthdr	inc/ring_buffer.h	/^	struct pcap_pkthdr pkthdr;$/;"	m	struct:ring_buffer_node_tag	typeref:struct:ring_buffer_node_tag::pcap_pkthdr
plain	inc/http_IM_parser.h	/^	char plain[IM_FILE_NAME_LENGTH];	\/\/ÂæÆÂçöÔºåBBSÁ≠âÂÜÖÂÆπ$/;"	m	struct:IM_file_inf
plustospace	src/http_IM_parser.c	/^char* plustospace( char* str )$/;"	f
pmutex	inc/ring_buffer.h	/^	pthread_mutex_t pmutex;$/;"	m	struct:session_buffer_holder
port	inc/http_parser.h	/^  uint16_t port;                \/* Converted UF_PORT string *\/$/;"	m	struct:http_parser_url
port_dst	inc/ring_buffer.h	/^	uint16_t port_dst;	\/\/ÁõÆÁöÑÁ´ØÂè£$/;"	m	struct:five_attr
port_dst	inc/ring_buffer.h	/^	uint16_t port_dst;$/;"	m	struct:sfive_attr
port_dst	inc/ring_buffer.h	/^        uint16_t port_dst;$/;"	m	struct:four_tuple
port_src	inc/ring_buffer.h	/^	uint16_t port_src;	\/\/Ê∫êÁ´ØÂè£$/;"	m	struct:five_attr
port_src	inc/ring_buffer.h	/^	uint16_t port_src;$/;"	m	struct:sfive_attr
port_src	inc/ring_buffer.h	/^        uint16_t port_src;$/;"	m	struct:four_tuple
post_id	inc/beap_hash.h	/^	char           post_id[128];	\/\/?‘∂??????÷∑???$/;"	m	struct:http_IM_tuple5
prev	inc/imembase.h	/^	struct IQUEUEHEAD *next, *prev;$/;"	m	struct:IQUEUEHEAD	typeref:struct:IQUEUEHEAD::
prev_hash	inc/beap_hash.h	/^struct stru_hash_bucket * prev_hash;$/;"	m	struct:__anon1	typeref:struct:__anon1::stru_hash_bucket
priority	src/pfutils.c	/^	u_int8_t priority:4, version:4;$/;"	m	struct:compact_ipv6_hdr	file:
pro	inc/beap_hash.h	/^   unsigned int pro;$/;"	m	struct:tuple5
pro_id	inc/webmail_parser.h	/^	int pro_id;\/*ÂçèËÆÆÂè∑ÔºåwebmailÂçèËÆÆÂè∑Á†ÅÊòØ157ÔºåhttpÁöÑÂçèËÆÆÂè∑ÊòØ7*\/$/;"	m	struct:mail
pro_smtp_jsonstr	src/gmime_smtp.c	/^int pro_smtp_jsonstr(GMimeMessage *message, char *emlpath, struct namenode* nodelist, char **projson)$/;"	f
protocol	inc/beap_hash.h	/^	 u_int32_t     protocol; \/\/by niulw add$/;"	m	struct:tuple5
protocol	inc/ring_buffer.h	/^	uint32_t protocol;	\/\/Êú¨Êñá‰ª∂ÁΩëÁªú‰º†ËæìÁöÑÂçèËÆÆ$/;"	m	struct:five_attr
protocol	inc/ring_buffer.h	/^	uint32_t protocol;$/;"	m	struct:sfive_attr
protocol	src/pfutils.c	/^	u_int8_t protocol;$/;"	m	struct:compact_ip_hdr	file:
ptr	inc/beap_hash.h	/^    hash_ptr	ptr;$/;"	m	struct:stru_hash_bucket
queue	inc/imembase.h	/^	struct IQUEUEHEAD queue;$/;"	m	struct:IMEMCACHE	typeref:struct:IMEMCACHE::IQUEUEHEAD
queue	inc/imembase.h	/^	struct IQUEUEHEAD queue;$/;"	m	struct:IMEMSLAB	typeref:struct:IMEMSLAB::IQUEUEHEAD
quit_seen	inc/smtpfunc.h	/^  unsigned char quit_seen;           \/* ÁúãÂà∞‰∏Ä‰∏™RSET *\/$/;"	m	struct:zcsmtp_session_state
random_uuid	src/extractmain.c	/^int random_uuid(char buf[128]) $/;"	f
range	inc/beap_hash.h	/^	unsigned long			range;	\/\/Message Body???ƒº??????????????ƒº???Œª??∆´??¡ø$/;"	m	struct:_http_IM_session
range	inc/http_IM_parser.h	/^    unsigned long range;				\/\/Message Body‰∏≠Êñá‰ª∂Êï∞ÊçÆÂú®ÊâÄ‰º†ËæìÊñá‰ª∂ÁöÑ‰ΩçÁΩÆÂÅèÁßªÈáè$/;"	m	struct:IM_file_inf
range	inc/http_parser.h	/^	char range[HTTP_FILE_RANGE];\/\/–ÌΩ®∂´–¬‘ˆ$/;"	m	struct:dlp_http_post_head
rb_base	inc/ring_buffer.h	/^	RING_BUFFER_NODE *rb_base;$/;"	m	struct:ring_buffer_holder
rb_base	inc/ring_buffer.h	/^	SESSION_BUFFER_NODE *rb_base;$/;"	m	struct:session_buffer_holder
rb_holder	inc/ring_buffer.h	/^} rb_holder[MAX_RING_BUFFER_COUNT];$/;"	v	typeref:struct:ring_buffer_holder
rbuff_create	src/session_buf.c	/^int rbuff_create (int irb_qlength)$/;"	f
rbuff_destroy	src/session_buf.c	/^int rbuff_destroy(int iringbuffer_ID)$/;"	f
rbuff_getdata	src/session_buf.c	/^int rbuff_getdata(const int iringbuffer_ID, void *pData, struct pcap_pkthdr *hdr, struct tuple5 *session_five_attr)$/;"	f
rbuff_putdata	src/session_buf.c	/^int rbuff_putdata(const int iringbuffer_ID, void *pData, struct pcap_pkthdr *hdr, struct tuple5 *session_five_attr)$/;"	f
rcpt_count	inc/smtpfunc.h	/^    int rcpt_count;                            \/* Êé•Êî∂‰∫∫‰∏™Êï∞ *\/$/;"	m	struct:SmtpSession
rcpt_count	inc/smtpfunc.h	/^    int rcpt_count;                            \/* Êé•Êî∂‰∫∫‰∏™Êï∞ *\/$/;"	m	struct:smtp_reset
rcpt_count	inc/smtpfunc.h	/^    int rcpt_count;                      \/* Êé•Êî∂‰∫∫‰∏™Êï∞ *\/$/;"	m	struct:SMTPID
rcpt_count	inc/smtpfunc.h	/^    int rcpt_count;                    \/* Êé•Êî∂‰∫∫‰∏™Êï∞ *\/$/;"	m	struct:mail_body_attribute
rcpt_to	inc/smtpfunc.h	/^    rcpt_to_t *rcpt_to;                        \/* ‰ø°Â∞ÅÊé•Êî∂‰∫∫Âú∞ÂùÄ *\/$/;"	m	struct:SmtpSession
rcpt_to	inc/smtpfunc.h	/^    rcpt_to_t *rcpt_to;                        \/* ‰ø°Â∞ÅÊé•Êî∂‰∫∫Âú∞ÂùÄ *\/$/;"	m	struct:smtp_reset
rcpt_to	inc/smtpfunc.h	/^    rcpt_to_t *rcpt_to;                  \/* ‰ø°Â∞ÅÊé•Êî∂‰∫∫Âú∞ÂùÄ *\/$/;"	m	struct:SMTPID
rcpt_to	inc/smtpfunc.h	/^    rcpt_to_t *rcpt_to;                \/* ‰ø°‰ΩìÊé•Êî∂‰∫∫Âú∞ÂùÄ *\/$/;"	m	struct:mail_body_attribute
rcpt_to	inc/smtpfunc.h	/^typedef struct rcpt_to$/;"	s
rcpt_to_addr	inc/smtpfunc.h	/^   char *rcpt_to_addr;                     \/* Êî∂‰ª∂‰∫∫ *\/$/;"	m	struct:rcpt_to
rcpt_to_t	inc/smtpfunc.h	/^} rcpt_to_t;$/;"	t	typeref:struct:rcpt_to
read_IM_config	src/read_IM_config.c	/^int read_IM_config()$/;"	f
record_log	src/extractmain.c	/^int record_log (char *logname, char *thing, int *data)$/;"	f
refcnt	inc/imembase.h	/^	long refcnt;$/;"	m	struct:IMEMGFP
referer	inc/http_parser.h	/^	char referer[HTTP_FILE_REFERER_MAX];$/;"	m	struct:dlp_http_post_head
reg	inc/read_IM_config.h	/^		char	*reg;$/;"	m	struct:_IM_HOST_URL_REG
remove_flist	src/update_json.c	/^int remove_flist (char *jsonstr, char **jsondest, int file_flag) $/;"	f
remove_hash	src/beap_hash.c	/^void remove_hash(hash_table * tbl, hash_bucket * elem, int len)$/;"	f
remove_pid_file	src/pfutils.c	/^void remove_pid_file(char *pidFile)$/;"	f
reply_to	inc/gmime_smtp.h	/^	char *reply_to;$/;"	m	struct:_envelope
req	src/srv_echo.c	/^  ci_request_t *req;$/;"	m	struct:echo_req_data	file:
request_type	inc/http_parser.h	/^	char request_type[10];$/;"	m	struct:dlp_http_post_head
reserved	inc/imembase.h	/^    long reserved;$/;"	m	struct:IALLOCATOR
reset_smtp_session	src/smtpfunc.c	/^int reset_smtp_session (SmtpSession_t *p_session)$/;"	f
result_json	inc/smtpfunc.h	/^	char *result_json;                         \/* ÊúÄÁªà‰∫ßÁîüÁöÑjson‰∏≤ *\/$/;"	m	struct:SmtpSession
ring_buffer_holder	inc/ring_buffer.h	/^struct ring_buffer_holder {$/;"	s
ring_buffer_node_tag	inc/ring_buffer.h	/^typedef struct ring_buffer_node_tag {$/;"	s
rset_seen	inc/smtpfunc.h	/^  unsigned char rset_seen;           \/* ÁúãÂà∞‰∏Ä‰∏™RSET *\/$/;"	m	struct:zcsmtp_session_state
s	inc/beap_hash.h	/^    char s[64];$/;"	m	struct:http_feition_tuple2
s	inc/http_IM_parser.h	/^    char    s[128];$/;"	m	struct:feition_data_post
s1	inc/http_IM_parser.h	/^	char	s1[16];	\/\/È£û‰ø°‰ºöËØùID$/;"	m	struct:feition_data_post
s_body_identity	src/http_parser.c	/^  , s_body_identity$/;"	e	enum:state	file:
s_body_identity_eof	src/http_parser.c	/^  , s_body_identity_eof$/;"	e	enum:state	file:
s_chunk_data	src/http_parser.c	/^  , s_chunk_data$/;"	e	enum:state	file:
s_chunk_data_almost_done	src/http_parser.c	/^  , s_chunk_data_almost_done$/;"	e	enum:state	file:
s_chunk_data_done	src/http_parser.c	/^  , s_chunk_data_done$/;"	e	enum:state	file:
s_chunk_parameters	src/http_parser.c	/^  , s_chunk_parameters$/;"	e	enum:state	file:
s_chunk_size	src/http_parser.c	/^  , s_chunk_size$/;"	e	enum:state	file:
s_chunk_size_almost_done	src/http_parser.c	/^  , s_chunk_size_almost_done$/;"	e	enum:state	file:
s_chunk_size_start	src/http_parser.c	/^  , s_chunk_size_start$/;"	e	enum:state	file:
s_dead	src/http_parser.c	/^  { s_dead = 1 \/* important that this is > 0 *\/$/;"	e	enum:state	file:
s_head_field	src/parsertrace.c	/^char *s_head_field[HEAD_FIELD_INDEX_MAX] =$/;"	v
s_header_almost_done	src/http_parser.c	/^  , s_header_almost_done$/;"	e	enum:state	file:
s_header_field	src/http_parser.c	/^  , s_header_field$/;"	e	enum:state	file:
s_header_field_start	src/http_parser.c	/^  , s_header_field_start$/;"	e	enum:state	file:
s_header_value	src/http_parser.c	/^  , s_header_value$/;"	e	enum:state	file:
s_header_value_discard_lws	src/http_parser.c	/^  , s_header_value_discard_lws$/;"	e	enum:state	file:
s_header_value_discard_ws	src/http_parser.c	/^  , s_header_value_discard_ws$/;"	e	enum:state	file:
s_header_value_discard_ws_almost_done	src/http_parser.c	/^  , s_header_value_discard_ws_almost_done$/;"	e	enum:state	file:
s_header_value_lws	src/http_parser.c	/^  , s_header_value_lws$/;"	e	enum:state	file:
s_header_value_start	src/http_parser.c	/^  , s_header_value_start$/;"	e	enum:state	file:
s_headers_almost_done	src/http_parser.c	/^  , s_headers_almost_done$/;"	e	enum:state	file:
s_headers_done	src/http_parser.c	/^  , s_headers_done$/;"	e	enum:state	file:
s_http_host	src/http_parser.c	/^  , s_http_host$/;"	e	enum:http_host_state	file:
s_http_host_dead	src/http_parser.c	/^    s_http_host_dead = 1$/;"	e	enum:http_host_state	file:
s_http_host_port	src/http_parser.c	/^  , s_http_host_port$/;"	e	enum:http_host_state	file:
s_http_host_port_start	src/http_parser.c	/^  , s_http_host_port_start$/;"	e	enum:http_host_state	file:
s_http_host_start	src/http_parser.c	/^  , s_http_host_start$/;"	e	enum:http_host_state	file:
s_http_host_v6	src/http_parser.c	/^  , s_http_host_v6$/;"	e	enum:http_host_state	file:
s_http_host_v6_end	src/http_parser.c	/^  , s_http_host_v6_end$/;"	e	enum:http_host_state	file:
s_http_host_v6_start	src/http_parser.c	/^  , s_http_host_v6_start$/;"	e	enum:http_host_state	file:
s_http_userinfo	src/http_parser.c	/^  , s_http_userinfo$/;"	e	enum:http_host_state	file:
s_http_userinfo_start	src/http_parser.c	/^  , s_http_userinfo_start$/;"	e	enum:http_host_state	file:
s_message_done	src/http_parser.c	/^  , s_message_done$/;"	e	enum:state	file:
s_req_first_http_major	src/http_parser.c	/^  , s_req_first_http_major$/;"	e	enum:state	file:
s_req_first_http_minor	src/http_parser.c	/^  , s_req_first_http_minor$/;"	e	enum:state	file:
s_req_fragment	src/http_parser.c	/^  , s_req_fragment$/;"	e	enum:state	file:
s_req_fragment_start	src/http_parser.c	/^  , s_req_fragment_start$/;"	e	enum:state	file:
s_req_http_H	src/http_parser.c	/^  , s_req_http_H$/;"	e	enum:state	file:
s_req_http_HT	src/http_parser.c	/^  , s_req_http_HT$/;"	e	enum:state	file:
s_req_http_HTT	src/http_parser.c	/^  , s_req_http_HTT$/;"	e	enum:state	file:
s_req_http_HTTP	src/http_parser.c	/^  , s_req_http_HTTP$/;"	e	enum:state	file:
s_req_http_major	src/http_parser.c	/^  , s_req_http_major$/;"	e	enum:state	file:
s_req_http_minor	src/http_parser.c	/^  , s_req_http_minor$/;"	e	enum:state	file:
s_req_http_start	src/http_parser.c	/^  , s_req_http_start$/;"	e	enum:state	file:
s_req_line_almost_done	src/http_parser.c	/^  , s_req_line_almost_done$/;"	e	enum:state	file:
s_req_method	src/http_parser.c	/^  , s_req_method$/;"	e	enum:state	file:
s_req_path	src/http_parser.c	/^  , s_req_path$/;"	e	enum:state	file:
s_req_query_string	src/http_parser.c	/^  , s_req_query_string$/;"	e	enum:state	file:
s_req_query_string_start	src/http_parser.c	/^  , s_req_query_string_start$/;"	e	enum:state	file:
s_req_schema	src/http_parser.c	/^  , s_req_schema$/;"	e	enum:state	file:
s_req_schema_slash	src/http_parser.c	/^  , s_req_schema_slash$/;"	e	enum:state	file:
s_req_schema_slash_slash	src/http_parser.c	/^  , s_req_schema_slash_slash$/;"	e	enum:state	file:
s_req_server	src/http_parser.c	/^  , s_req_server$/;"	e	enum:state	file:
s_req_server_start	src/http_parser.c	/^  , s_req_server_start$/;"	e	enum:state	file:
s_req_server_with_at	src/http_parser.c	/^  , s_req_server_with_at$/;"	e	enum:state	file:
s_req_spaces_before_url	src/http_parser.c	/^  , s_req_spaces_before_url$/;"	e	enum:state	file:
s_res_H	src/http_parser.c	/^  , s_res_H$/;"	e	enum:state	file:
s_res_HT	src/http_parser.c	/^  , s_res_HT$/;"	e	enum:state	file:
s_res_HTT	src/http_parser.c	/^  , s_res_HTT$/;"	e	enum:state	file:
s_res_HTTP	src/http_parser.c	/^  , s_res_HTTP$/;"	e	enum:state	file:
s_res_first_http_major	src/http_parser.c	/^  , s_res_first_http_major$/;"	e	enum:state	file:
s_res_first_http_minor	src/http_parser.c	/^  , s_res_first_http_minor$/;"	e	enum:state	file:
s_res_first_status_code	src/http_parser.c	/^  , s_res_first_status_code$/;"	e	enum:state	file:
s_res_http_major	src/http_parser.c	/^  , s_res_http_major$/;"	e	enum:state	file:
s_res_http_minor	src/http_parser.c	/^  , s_res_http_minor$/;"	e	enum:state	file:
s_res_line_almost_done	src/http_parser.c	/^  , s_res_line_almost_done$/;"	e	enum:state	file:
s_res_or_resp_H	src/http_parser.c	/^  , s_res_or_resp_H$/;"	e	enum:state	file:
s_res_status	src/http_parser.c	/^  , s_res_status$/;"	e	enum:state	file:
s_res_status_code	src/http_parser.c	/^  , s_res_status_code$/;"	e	enum:state	file:
s_res_status_start	src/http_parser.c	/^  , s_res_status_start$/;"	e	enum:state	file:
s_start_req	src/http_parser.c	/^  , s_start_req$/;"	e	enum:state	file:
s_start_req_or_res	src/http_parser.c	/^  , s_start_req_or_res$/;"	e	enum:state	file:
s_start_res	src/http_parser.c	/^  , s_start_res$/;"	e	enum:state	file:
saddr	inc/beap_hash.h	/^   u_int saddr;$/;"	m	struct:tuple4
saddr	inc/beap_hash.h	/^   unsigned int saddr;$/;"	m	struct:tuple5
saddr	src/pfutils.c	/^	u_int32_t saddr;$/;"	m	struct:compact_ip_hdr	file:
sb_holder	inc/ring_buffer.h	/^} sb_holder[MAX_SRING_BUFFER_COUNT];$/;"	v	typeref:struct:session_buffer_holder
sbuff_create	src/session_buf.c	/^int sbuff_create (int irb_qlength)$/;"	f
sbuff_destroy	src/session_buf.c	/^int sbuff_destroy(int iringbuffer_ID)$/;"	f
sbuff_getdata	src/session_buf.c	/^int sbuff_getdata(const int iringbuffer_ID, SESSION_BUFFER_NODE *hdr)$/;"	f
sbuff_putdata	src/session_buf.c	/^int sbuff_putdata(const int iringbuffer_ID, SESSION_BUFFER_NODE ft)$/;"	f
seen_dot	src/smtp_dissect.c	/^int seen_dot (SmtpSession_t *p_sessionsrc, char *packstr, unsigned int packlen, smtp_sbuffputdata sbuff_putdata, int sbuffer_id)$/;"	f
send_json	src/extractmain.c	/^int send_json(SESSION_BUFFER_NODE *pronode,unsigned long max_filesize)$/;"	f
send_msgqueue	src/extractmain.c	/^int send_msgqueue (char *jsondest, char *strpath)$/;"	f
sender	inc/gmime_smtp.h	/^	char *sender;$/;"	m	struct:_envelope
service	src/srv_echo.c	/^CI_DECLARE_MOD_DATA ci_service_module_t service = {$/;"	v
session_buffer_holder	inc/ring_buffer.h	/^struct session_buffer_holder {$/;"	s
session_buffer_node_tag	inc/ring_buffer.h	/^typedef struct session_buffer_node_tag {$/;"	s
session_comp	src/beap_hash.c	/^unsigned char session_comp(void *key1, void *key2, int len)$/;"	f
session_fft	inc/ring_buffer.h	/^typedef struct sfive_attr session_fft;$/;"	t	typeref:struct:sfive_attr
session_five_attr	inc/ring_buffer.h	/^	session_fft session_five_attr;$/;"	m	struct:ring_buffer_node_tag
session_five_attr	inc/ring_buffer.h	/^	session_ft session_five_attr;	\/\/‰∫îÂÖÉÁªÑ‰ø°ÊÅØ$/;"	m	struct:session_buffer_node_tag
session_ft	inc/ring_buffer.h	/^} session_ft;			\/\/‰∫îÂÖÉÁªÑ‰ø°ÊÅØ$/;"	t	typeref:struct:five_attr
session_hash	src/beap_hash.c	/^uint32_t session_hash(void *key, int len)$/;"	f
session_json	inc/type_define.h	/^char * session_json = "\/usr\/local\/c-icap-0.4.x\/bin\/session_json";\/\/by niulw add $/;"	v
session_quit_flag	inc/smtpfunc.h	/^	unsigned int session_quit_flag;            \/* Ê†áËØÜ‰ºöËØùÁªìÊùüÂèëÂá∫QUITÂëΩ‰ª§ *\/$/;"	m	struct:SmtpSession
session_stream	inc/type_define.h	/^char * session_stream = "\/usr\/local\/c-icap-0.4.x\/bin\/session_stream";\/\/by niulw add $/;"	v
set_mailenvelope_rcpt_from	src/smtpfunc.c	/^int set_mailenvelope_rcpt_from (SmtpSession_t *p_sessionsrc, char *jsonsrc, char **jsondest)$/;"	f
set_tika_message	src/update_json.c	/^int set_tika_message (char *jsonsrc, char **jsondest, tika_message_s tika_message, char *file_content_path, int file_flag)$/;"	f
set_tika_message_bak	src/update_json.c	/^int set_tika_message_bak (char *jsonsrc, char **jsondest, tika_message_s tika_message, char *file_content_path, int file_flag)$/;"	f
sfive_attr	inc/ring_buffer.h	/^struct sfive_attr {$/;"	s
show_name_nodelist	src/gmime_smtp.c	/^int show_name_nodelist (struct namenode* nodelist)$/;"	f
show_session	src/update_json.c	/^int show_session(SESSION_BUFFER_NODE *pronode)$/;"	f
show_smtp	src/smtpfunc.c	/^int show_smtp (SmtpSession_t *p_session)$/;"	f
sina_attach	src/webmail_parser.c	/^int sina_attach(webmail_string_and_len *StoPT,webmail_string_and_len *StoBY,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
sina_mail	src/webmail_parser.c	/^int sina_mail(webmail_string_and_len *StoPT,webmail_string_and_len *StoBY,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
slab_free	inc/imembase.h	/^	iqueue_head slab_free;$/;"	m	struct:IMCACHE_LIST3
slab_full	inc/imembase.h	/^	iqueue_head slab_full;$/;"	m	struct:IMCACHE_LIST3
slab_partial	inc/imembase.h	/^	iqueue_head slab_partial;$/;"	m	struct:IMCACHE_LIST3
slab_size	inc/imembase.h	/^	unsigned long slab_size;$/;"	m	struct:IMEMCACHE
smtp_accessory	inc/smtpfunc.h	/^    smtp_accessory_t *smtp_accessory;  \/* ÈôÑ‰ª∂ÈìæË°® *\/$/;"	m	struct:mail_body_attribute
smtp_accessory	inc/smtpfunc.h	/^typedef struct smtp_accessory$/;"	s
smtp_accessory_dir	inc/smtpfunc.h	/^   char *smtp_accessory_dir;                \/* ÈôÑ‰ª∂Ë∑ØÂæÑ *\/$/;"	m	struct:smtp_accessory
smtp_accessory_name	inc/smtpfunc.h	/^   char *smtp_accessory_name;               \/* ÈôÑ‰ª∂ÂêçÁß∞ *\/$/;"	m	struct:smtp_accessory
smtp_accessory_size	inc/smtpfunc.h	/^   int smtp_accessory_size;                 \/* ÈôÑ‰ª∂Â§ßÂ∞è *\/$/;"	m	struct:smtp_accessory
smtp_accessory_t	inc/smtpfunc.h	/^}smtp_accessory_t;$/;"	t	typeref:struct:smtp_accessory
smtp_data	inc/gmime_smtp.h	/^struct smtp_data$/;"	s
smtp_get_file_size	src/smtpfunc.c	/^unsigned long smtp_get_file_size (char *path)$/;"	f
smtp_reset	inc/smtpfunc.h	/^typedef struct smtp_reset $/;"	s
smtp_reset_msg	inc/smtpfunc.h	/^    struct SmtpSession *smtp_reset_msg;        \/* RSETÂâçÁöÑ‰ø°ÊÅØÈìæË°® *\/$/;"	m	struct:SmtpSession	typeref:struct:SmtpSession::SmtpSession
smtp_reset_msg	inc/smtpfunc.h	/^    struct SmtpSession *smtp_reset_msg;  \/* RSETÂâçÁöÑ‰ø°ÊÅØÈìæË°® *\/$/;"	m	struct:SMTPID	typeref:struct:SMTPID::SmtpSession
smtp_reset_t	inc/smtpfunc.h	/^} smtp_reset_t;            $/;"	t	typeref:struct:smtp_reset
smtp_sbuffputdata	inc/smtpfunc.h	/^typedef int (*smtp_sbuffputdata) (int iringbuffer_ID, SESSION_BUFFER_NODE ftt);$/;"	t
smtp_session_state	inc/smtpfunc.h	/^    zcsmtp_session_state_t smtp_session_state; \/* smtp‰º†ËæìÁä∂ÊÄÅ‰ø°ÊÅØ *\/$/;"	m	struct:SmtpSession
smtp_state	inc/smtpfunc.h	/^    zcsmtp_state_t smtp_state;                 \/* smtpËØ∑Ê±ÇÂìçÂ∫î,Êûö‰∏æ *\/$/;"	m	struct:SmtpSession
sohu_attach	src/webmail_parser.c	/^int sohu_attach(webmail_string_and_len *StoPT,webmail_string_and_len *StoBY,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
sohu_attach2	src/webmail_parser.c	/^int sohu_attach2(HttpSession* dlp_http,webmail_string_and_len *StoPT,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
sohu_mail	src/webmail_parser.c	/^int sohu_mail(webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
source	inc/beap_hash.h	/^   u_short source;$/;"	m	struct:tuple4
source	inc/beap_hash.h	/^  unsigned short source;$/;"	m	struct:tuple5
ssbuffer_id	src/webmail_parser.c	/^int ssbuffer_id = -1;$/;"	v
start	inc/gmime_smtp.h	/^   int start;$/;"	m	struct:smtp_data
start_state	src/http_parser.c	401;"	d	file:
starttls_seen	inc/smtpfunc.h	/^  unsigned char starttls_seen;       \/* ÁúãÂà∞STARTTLS *\/$/;"	m	struct:zcsmtp_session_state
state	inc/http_parser.h	/^  unsigned int state : 8;        \/* enum state from http_parser.c *\/$/;"	m	struct:http_parser
state	inc/webmail_parser.h	/^	}state;\/*ÊòØÂê¶ÈúÄË¶ÅÁîüÊàêjansson‰∏≤ÁöÑÁä∂ÊÄÅÊ†áÂøó*\/$/;"	m	struct:mail	typeref:enum:mail::__anon8
state	src/http_parser.c	/^enum state$/;"	g	file:
status_code	inc/http_parser.h	/^  unsigned int status_code : 16; \/* responses only *\/$/;"	m	struct:http_parser
store_smtp_data	src/smtpfunc.c	/^int store_smtp_data (SmtpSession_t *p_session, char *packstr, unsigned int packlen)$/;"	f
string	inc/http_parser.h	/^	char *string;$/;"	m	struct:DLP_HTTP_PARSER_STRING_AND_STRLEN
string	inc/webmail_parser.h	/^	char *string;$/;"	m	struct:DLP_WEBMAIL_PARSER_STRING_AND_STRLEN
strname	inc/ring_buffer.h	/^	char strname[128];	\/\/Êú¨Âú∞Â≠òÂÇ®Êñá‰ª∂0Âêç$/;"	m	struct:session_buffer_node_tag
strpath	inc/ring_buffer.h	/^	char strpath[128];	\/\/Êñá‰ª∂Ë∑ØÂæÑ$/;"	m	struct:session_buffer_node_tag
stru_hash_bucket	inc/beap_hash.h	/^typedef struct stru_hash_bucket{$/;"	s
subject	inc/gmime_smtp.h	/^	char *subject;$/;"	m	struct:_envelope
subparts	inc/gmime_smtp.h	/^	struct _bodystruct *subparts;$/;"	m	struct:_bodystruct	typeref:struct:_bodystruct::_bodystruct
subtype	inc/gmime_smtp.h	/^		char *subtype;$/;"	m	struct:_bodystruct::__anon4
system_time	src/webmail_parser.c	/^int system_time(char *nowtime)$/;"	f
t_comp_func	inc/beap_hash.h	/^typedef char(* t_comp_func)(void *, void *, int) ;$/;"	t
t_hash_func	inc/beap_hash.h	/^typedef uint32_t(* t_hash_func)(void *, int) ;$/;"	t
tbl_size	inc/beap_hash.h	/^    int		    tbl_size;\/\/????–°$/;"	m	struct:__anon2
testhttp_string_and_len	inc/http_parser.h	/^} testhttp_string_and_len;$/;"	t	typeref:struct:DLP_HTTP_PARSER_STRING_AND_STRLEN
ticks	src/pfutils.c	/^typedef u_int64_t ticks;$/;"	t	file:
tika	src/fileparse.c	/^char* tika(char* filepath,char* tofilepath)$/;"	f
tika_consumer_thread	src/webmail_parser.c	/^void* tika_consumer_thread(void* _id) $/;"	f
tika_file_parser	src/extractmain.c	/^int tika_file_parser (char *filefull_fname, char *file_content_path, tika_message_s *tika_message)$/;"	f
tika_message	inc/update_json.h	/^typedef struct tika_message $/;"	s
tika_message_s	inc/update_json.h	/^} tika_message_s;$/;"	t	typeref:struct:tika_message
time_convert	src/webmail_parser.c	/^int time_convert(char* time1,char*s)$/;"	f
to	inc/gmime_smtp.h	/^	char *to;$/;"	m	struct:_envelope
to_json	src/webmail_parser.c	/^int to_json(json_t * tolist , char * webmail_to)$/;"	f
tokens	src/http_parser.c	/^static const char tokens[256] = {$/;"	v	file:
tom_attach	src/webmail_parser.c	/^int tom_attach(webmail_string_and_len *StoBY,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
tom_mail	src/webmail_parser.c	/^int tom_mail(webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
topath	inc/extractmain.h	/^  char topath[128];$/;"	m	struct:nids_pm_msg
tos	src/pfutils.c	/^	u_int8_t tos;$/;"	m	struct:compact_ip_hdr	file:
tot_len	src/pfutils.c	/^	u_int16_t tot_len;$/;"	m	struct:compact_ip_hdr	file:
total_mem	inc/imembase.h	/^	long total_mem;                 \/* total memory size       *\/$/;"	m	struct:IMEMNODE
trace	src/pfutils.c	/^void trace(int trace_level, char *file, int line, char *format, ...)$/;"	f
ts	inc/beap_hash.h	/^	char					ts[64];	\/\/?ƒº??? º?????? ±??$/;"	m	struct:_http_IM_session
ts	inc/beap_hash.h	/^    char                            ts[64];$/;"	m	struct:_http_feition_session
ts	inc/http_IM_parser.h	/^	char ts[64];						\/\/Êñá‰ª∂ÂºÄÂßã‰º†ËæìÁöÑÊó∂Èó¥$/;"	m	struct:IM_file_inf
ttl	src/pfutils.c	/^	u_int8_t ttl;$/;"	m	struct:compact_ip_hdr	file:
tuple4	inc/beap_hash.h	/^struct tuple4$/;"	s
tuple5	inc/beap_hash.h	/^struct tuple5$/;"	s
type	inc/gmime_smtp.h	/^		char *type;$/;"	m	struct:_bodystruct::__anon4
type	inc/gmime_smtp.h	/^		char *type;$/;"	m	struct:_bodystruct::__anon5
type	inc/http_parser.h	/^  unsigned int type : 2;         \/* enum http_parser_type *\/$/;"	m	struct:http_parser
u2g	src/ftp_extract.c	/^u2g (char *inbuf, size_t inlen, char *outbuf, size_t outlen)$/;"	f
uchardet_t	inc/uchardet.h	/^typedef struct uchardet * uchardet_t;$/;"	t	typeref:struct:uchardet
udata	inc/imembase.h	/^    void *udata;$/;"	m	struct:IALLOCATOR
uid	inc/beap_hash.h	/^	char					uid[70];\/\/????‘≠ º?ƒº???UUID$/;"	m	struct:_http_IM_session
uid	inc/beap_hash.h	/^    char                            uid[70];$/;"	m	struct:_http_feition_session
uid	inc/http_IM_parser.h	/^	char uid[IM_FILE_NAME_LENGTH];		\/\/Â≠òÊîæÂéüÂßãÊñá‰ª∂ÁöÑUUID+fp$/;"	m	struct:IM_file_inf
uint16_t	inc/http_parser.h	/^typedef unsigned __int16 uint16_t;$/;"	t
uint32_t	inc/beap_hash.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	inc/http_parser.h	/^typedef unsigned __int32 uint32_t;$/;"	t
uint64_t	inc/beap_hash.h	/^typedef unsigned long  uint64_t; $/;"	t
uint64_t	inc/http_parser.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint8_t	inc/http_parser.h	/^typedef unsigned __int8 uint8_t;$/;"	t
unescape	src/http_IM_parser.c	/^char* unescape( char* s)$/;"	f
unhex	src/http_parser.c	/^static const int8_t unhex[256] =$/;"	v	file:
unit_size	inc/imembase.h	/^	unsigned long unit_size;$/;"	m	struct:IMCACHE_LIST3
up_load_size	inc/http_parser.h	/^	int  up_load_size;$/;"	m	struct:dlp_http_post_head
update_filelist_int_value	src/update_json.c	/^int update_filelist_int_value (char *jsonsrc, char **jsondest, char *key, int value, int file_flag)$/;"	f
update_filelist_value	src/update_json.c	/^int update_filelist_value (char *jsonsrc, char **jsondest, char *key, char *value, int file_flag)$/;"	f
upgrade	inc/http_parser.h	/^  unsigned int upgrade : 1;$/;"	m	struct:http_parser
upload_offset	inc/http_parser.h	/^	int  upload_offset;$/;"	m	struct:dlp_http_post_head
url	inc/http_parser.h	/^	char url[HTTP_FILE_URL_MAX];$/;"	m	struct:dlp_http_post_head
url	inc/read_IM_config.h	/^		char	*url;$/;"	m	struct:_IM_HOST_URL_REG
url	src/srv_echo.c	/^  char url[MAX_URL_SIZE];$/;"	m	struct:http_info	file:
usage	src/parsertrace.c	/^void usage(const char* name) {$/;"	f
user	inc/imembase.h	/^	long user;$/;"	m	struct:IMEMCACHE
user_agent	inc/http_parser.h	/^	char user_agent[512];$/;"	m	struct:dlp_http_post_head
uuid	inc/beap_hash.h	/^     char                uuid[512];$/;"	m	struct:https
uuid	inc/beap_hash.h	/^    char    uuid[UUID_MAX_LENGTH];$/;"	m	struct:__anon3
uuid	inc/extractmain.h	/^   char uuid[70]; \/* uuid,Á≠ñÁï•ÂåπÈÖçÈúÄË¶Å‰ΩøÁî®ÔºåËøôËæπ‰∏çÁî®*\/$/;"	m	struct:path_msg
uuid	inc/webmail_parser.h	/^	char uuid[UUID_LENGTH];\/*Êñá‰ª∂ÁöÑÂ≠òÂÇ®Âêçuuid*\/$/;"	m	struct:mail
uuidname	inc/gmime_smtp.h	/^    char *uuidname;$/;"	m	struct:namenode
var	inc/http_parser.h	/^	char *var;$/;"	m	struct:dlp_http_file_node
vdata	inc/imembase.h	/^	struct IVECTOR vdata;           \/* node data buffer vector *\/$/;"	m	struct:IMEMNODE	typeref:struct:IMEMNODE::IVECTOR
version	src/pfutils.c	/^	u_int8_t ihl:4, version:4;$/;"	m	struct:compact_ip_hdr	file:
version	src/pfutils.c	/^	u_int8_t priority:4, version:4;$/;"	m	struct:compact_ipv6_hdr	file:
vmem	inc/imembase.h	/^	struct IVECTOR vmem;            \/* mem-pages in the pool   *\/$/;"	m	struct:IMEMNODE	typeref:struct:IMEMNODE::IVECTOR
vmode	inc/imembase.h	/^	struct IVECTOR vmode;           \/* mode of allocation      *\/$/;"	m	struct:IMEMNODE	typeref:struct:IMEMNODE::IVECTOR
vnext	inc/imembase.h	/^	struct IVECTOR vnext;           \/* next node link vector   *\/$/;"	m	struct:IMEMNODE	typeref:struct:IMEMNODE::IVECTOR
vnode	inc/imembase.h	/^	struct IVECTOR vnode;           \/* node information data   *\/$/;"	m	struct:IMEMNODE	typeref:struct:IMEMNODE::IVECTOR
vprev	inc/imembase.h	/^	struct IVECTOR vprev;           \/* prev node link vector   *\/$/;"	m	struct:IMEMNODE	typeref:struct:IMEMNODE::IVECTOR
web_URLDecode	src/webmail_parser.c	/^int web_URLDecode(const char* str, const int strSize, char* result, const int resultSize)$/;"	f
webmail_free_HttpSession	src/webmail_parser.c	/^    int webmail_free_HttpSession (HttpSession* dlp_http){$/;"	f
webmail_mail	src/webmail_parser.c	/^    int webmail_mail(HttpSession* dlp_http,char **webmailjson, http_sbuffputdata sbuff_putdata, const int iringbuffer_ID)$/;"	f
webmail_pro_jsonstr	src/webmail_parser.c	/^    int webmail_pro_jsonstr(HttpSession* dlp_http,dlp_webmail_info *webmail, char **webmailjson, http_sbuffputdata sbuff_putdata, const int iringbuffer_ID)$/;"	f
webmail_string_and_len	inc/webmail_parser.h	/^} webmail_string_and_len;$/;"	t	typeref:struct:DLP_WEBMAIL_PARSER_STRING_AND_STRLEN
webmail_to_parser	src/webmail_parser.c	/^int webmail_to_parser(webmail_string_and_len *var , char *sto ){$/;"	f
whattodo	src/srv_echo.c	/^static int whattodo = 0;$/;"	v	file:
while_show_smtp	src/smtpfunc.c	/^int while_show_smtp(SmtpSession_t *p_session)$/;"	f
wirte_IM_file	src/http_IM_parser.c	/^int wirte_IM_file(char *rs, const char *ws, unsigned long range, unsigned long len)$/;"	f
write_first_post	src/http_IM_parser.c	/^int write_first_post(char *rs, const char *ws, unsigned long range, unsigned long len)$/;"	f
write_outlog_lock	src/extractmain.c	/^pthread_mutex_t write_outlog_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v
write_part	src/gmime_smtp.c	/^void write_part (GMimeObject *part, struct namenode* nodelist, const char *spec)$/;"	f
wrn_log	inc/plog.h	/^zlog_category_t* wrn_log;$/;"	v
wyattach	src/webmail_parser.c	/^int wyattach(HttpSession* dlp_http,webmail_string_and_len *StoPT,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
wyattach1	src/webmail_parser.c	/^int wyattach1(webmail_string_and_len *StoBY,webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
wymail	src/webmail_parser.c	/^int wymail(webmail_string_and_len *StoMB,dlp_webmail_info *webmail)$/;"	f
x2c	src/http_IM_parser.c	/^char x2c( const char* hex )$/;"	f
zcsmtp_data_store_flag	inc/smtpfunc.h	/^typedef enum  zcsmtp_data_store_flag$/;"	g
zcsmtp_data_store_flag_t	inc/smtpfunc.h	/^} zcsmtp_data_store_flag_t;  \/* DATAÊï∞ÊçÆ‰º†ËæìÁöÑÁä∂ÊÄÅ *\/$/;"	t	typeref:enum:zcsmtp_data_store_flag
zcsmtp_session_state	inc/smtpfunc.h	/^typedef struct zcsmtp_session_state$/;"	s
zcsmtp_session_state_t	inc/smtpfunc.h	/^} zcsmtp_session_state_t;$/;"	t	typeref:struct:zcsmtp_session_state
zcsmtp_state	inc/smtpfunc.h	/^typedef enum zcsmtp_state$/;"	g
zcsmtp_state_t	inc/smtpfunc.h	/^} zcsmtp_state_t;$/;"	t	typeref:enum:zcsmtp_state
